name: Tests

on:
  push:
    branches: [ main, develop, claude/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests with pytest
      run: |
        pytest tests/ -v --cov=betty --cov-report=term-missing --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests with pytest
      run: |
        pytest tests/ -v --cov=betty --cov-report=term-missing --cov-report=xml

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black mypy pylint types-PyYAML
        pip install -r requirements.txt

    - name: Check code formatting with Black
      run: |
        black --check betty/ skills/ tests/

    - name: Type checking with mypy
      run: |
        mypy betty/ --ignore-missing-imports
      continue-on-error: true

    - name: Lint with pylint
      run: |
        pylint betty/ --disable=C0111,R0903
      continue-on-error: true

  integration:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test skill creation workflow
      run: |
        python skills/skill.create/skill_create.py \
          "test.integration" \
          "Integration test skill" \
          --inputs "test_input" \
          --outputs "test_output"

    - name: Verify created skill
      run: |
        test -f skills/test.integration/skill.yaml
        test -f skills/test.integration/SKILL.md
        test -f skills/test.integration/test_integration.py

    - name: Test workflow execution
      run: |
        python skills/workflow.compose/workflow_compose.py \
          workflows/create_workflow_validate.yaml
