# Betty Framework - Claude Code Plugin
# Auto-generated by plugin.sync skill
# DO NOT EDIT MANUALLY - Run plugin.sync to regenerate

name: betty-framework
version: 1.0.0
description: "Betty Framework is RiskExec's system for structured, auditable AI-assisted\
  \ engineering.\nWhere Claude Code provides the runtime, Betty adds methodology,\
  \ orchestration, and governance\u2014\nturning raw agent capability into a repeatable,\
  \ enterprise-grade engineering discipline.\n"
author:
  name: RiskExec
  email: platform@riskexec.com
  url: https://github.com/epieczko/betty
license: MIT
metadata:
  homepage: https://github.com/epieczko/betty
  repository: https://github.com/epieczko/betty
  documentation: https://github.com/epieczko/betty/tree/main/docs
  tags:
  - framework
  - api-development
  - workflow
  - governance
  - enterprise
  - skills
  - agents
  generated_at: '2025-10-23T20:00:01.127365+00:00'
  generated_by: plugin.sync skill
  skill_count: 20
  command_count: 19
requirements:
  python: '>=3.11'
  packages:
  - pyyaml
  optional:
  - datamodel-code-generator
permissions:
- filesystem:read
- filesystem:write
- process:execute
- network:none
commands:
- name: workflow/validate
  description: 'Validate the structure of a workflow YAML file before execution.

    '
  handler:
    runtime: python
    script: skills/workflow.validate/workflow_validate.py
  parameters:
  - name: workflow.yaml
    type: string
    required: true
    description: Path to the workflow YAML file.
  permissions:
  - filesystem
  - read
- name: skill/hook/define
  description: Create and register validation hooks for Claude Code
  handler:
    runtime: python
    script: skills/hook.define/hook_define.py
  permissions:
  - filesystem:read
  - filesystem:write
- name: skill/api/validate
  description: Validate OpenAPI and AsyncAPI specifications against enterprise guidelines
  handler:
    runtime: python
    script: skills/api.validate/api_validate.py
  permissions:
  - filesystem:read
  - network:http
- name: skill/api/define
  description: Create OpenAPI and AsyncAPI specifications from templates
  handler:
    runtime: python
    script: skills/api.define/api_define.py
  permissions:
  - filesystem:read
  - filesystem:write
- name: skill/api/generate-models
  description: Generate type-safe models from OpenAPI and AsyncAPI specifications
    using Modelina
  handler:
    runtime: python
    script: skills/api.generate-models/modelina_generate.py
  permissions:
  - filesystem:read
  - filesystem:write
  - process:execute
- name: skill/api/compatibility
  description: Detect breaking changes between API specification versions
  handler:
    runtime: python
    script: skills/api.compatibility/check_compatibility.py
  permissions:
  - filesystem:read
- name: agent/define
  description: 'Validate an agent manifest and register it in the Agent Registry.

    '
  handler:
    runtime: python
    script: skills/agent.define/agent_define.py
  parameters:
  - name: manifest_path
    type: string
    required: true
    description: Path to the agent.yaml file to validate
  permissions:
  - filesystem:read
  - filesystem:write
- name: skill/command/define
  description: Validate and register command manifests in the Command Registry
  handler:
    runtime: python
    script: skills/command.define/command_define.py
  permissions:
  - filesystem:read
  - filesystem:write
- name: skill/hook/register
  description: Validate and register hook manifests in the Hook Registry
  handler:
    runtime: python
    script: skills/hook.register/hook_register.py
  permissions:
  - filesystem:read
  - filesystem:write
- name: workflow/compose
  description: 'Execute a Betty workflow defined in a YAML file.

    '
  handler:
    runtime: python
    script: skills/workflow.compose/workflow_compose.py
  parameters:
  - name: workflow_path
    type: string
    required: true
    description: Path to a workflow YAML file to execute.
  permissions:
  - filesystem
  - read
  - write
- name: agent/run
  description: 'Simulate execution of an agent manifest. Shows the constructed prompt,
    mock Claude response, and skills that would be invoked.

    '
  handler:
    runtime: python
    script: skills/run.agent/run_agent.py
  parameters:
  - name: agent_path
    type: string
    required: true
    description: Path to agent.yaml file or agent name (e.g., api.designer)
  - name: input_text
    type: string
    required: false
    description: Optional input text to provide to the agent
  permissions:
  - filesystem:read
- name: skill/define
  description: 'Validate a Claude Code skill manifest and register it in the Betty
    Skill Registry.

    '
  handler:
    runtime: python
    script: skills/skill.define/skill_define.py
  parameters:
  - name: manifest_path
    type: string
    required: true
    description: Path to the skill.yaml file to validate.
  permissions:
  - filesystem
  - read
  - write
- name: skill/create
  description: 'Scaffolds a new Betty Skill directory, generates its manifest, validates
    it with skill.define, and updates the registry.

    '
  handler:
    runtime: python
    script: skills/skill.create/skill_create.py
  parameters:
  - name: skill_name
    type: string
    description: Name of the new skill (e.g., runtime.execute)
    required: true
  - name: description
    type: string
    description: Description of what the skill will do
    required: true
  - name: inputs
    type: string
    description: Comma-separated list of input parameters (optional)
    required: false
  - name: outputs
    type: string
    description: Comma-separated list of output parameters (optional)
    required: false
  permissions:
  - filesystem
  - read
  - write
- name: registry/update
  description: 'Add or update entries in the Skill Registry.

    '
  handler:
    runtime: python
    script: skills/registry.update/registry_update.py
  parameters:
  - name: manifest_path
    type: string
    required: true
    description: Path to the skill manifest (.skill.yaml) being added or updated.
  permissions:
  - filesystem
  - read
  - write
- name: plugin/sync
  description: 'Generate plugin.yaml from registry files. Syncs active skills with
    entrypoints into plugin commands.

    '
  handler:
    runtime: python
    script: skills/plugin.sync/plugin_sync.py
  parameters: []
  permissions:
  - filesystem:read
  - filesystem:write
- name: marketplace/generate
  description: 'Generate marketplace catalogs from registry files. Filters by status:
    active and certified: true.

    '
  handler:
    runtime: python
    script: skills/generate.marketplace/generate_marketplace.py
  parameters: []
  permissions:
  - filesystem:read
  - filesystem:write
- name: agent/run
  description: 'Execute a Betty agent with optional task context. Generates Claude-friendly
    prompts, invokes the Claude API (or simulates), executes planned skills, and logs
    all results to agent_logs/ directory.

    '
  handler:
    runtime: python
    script: skills/agent.run/agent_run.py
  parameters:
  - name: agent_path
    type: string
    required: true
    description: Path to agent.yaml file or agent name (e.g., api.designer)
  - name: task_context
    type: string
    required: false
    description: Optional task or query for the agent to execute
  - name: save_log
    type: boolean
    required: false
    default: true
    description: Save execution log to agent_logs/<agent>_<timestamp>.json
  permissions:
  - filesystem:read
  - filesystem:write
  - network:http
- name: plugin/build
  description: 'Bundle plugin directory into deployable package. Validates all entrypoints
    and handlers before packaging.

    '
  handler:
    runtime: python
    script: skills/plugin.build/plugin_build.py
  parameters:
  - name: plugin_path
    type: string
    required: false
    description: Path to plugin.yaml (defaults to ./plugin.yaml)
  - name: output_format
    type: string
    required: false
    description: Package format (tar.gz or zip, defaults to tar.gz)
  - name: output_dir
    type: string
    required: false
    description: Output directory (defaults to ./dist)
  permissions:
  - filesystem:read
  - filesystem:write
- name: docs/sync/plugin-manifest
  description: Reconcile plugin.yaml with registry files. Identifies discrepancies
    and generates plugin.preview.yaml with suggested updates and a detailed diff report.
  handler:
    runtime: python
    script: skills/docs.sync.plugin_manifest/plugin_manifest_sync.py
  parameters: []
  permissions:
  - filesystem:read
  - filesystem:write
agents:
- name: api.designer
  description: Design APIs with iterative refinement following enterprise guidelines
  manifest: agents/api.designer/agent.yaml
- name: api.analyzer
  description: Analyze API specifications for compatibility and best practices
  manifest: agents/api.analyzer/agent.yaml
config:
  paths:
    skills: skills
    agents: agents
    registry: registry
    workflows: workflows
    specs: specs
  api:
    default_template: zalando
    default_guideline: zalando
    default_version: 1.0.0
  governance:
    policy_enforcement: true
    audit_logging: true
    registry_validation: true
install:
  post_install:
  - command: python -c "from betty.config import ensure_directories; ensure_directories()"
    description: Initialize Betty Framework directories
  - command: python -c "import os; os.makedirs('specs', exist_ok=True); os.makedirs('workflows',
      exist_ok=True)"
    description: Create additional working directories
health:
  checks:
  - name: python_version
    command: python --version
    expected_pattern: Python 3\.(1[1-9]|[2-9][0-9])
  - name: yaml_support
    command: python -c "import yaml; print('ok')"
    expected_pattern: ok
  - name: registry_exists
    command: python -c "import os; print('ok' if os.path.exists('registry/skills.json')
      else 'missing')"
    expected_pattern: (ok|missing)
