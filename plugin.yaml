# Betty Framework - Claude Code Plugin
# Auto-generated by plugin.sync skill
# DO NOT EDIT MANUALLY - Run plugin.sync to regenerate

name: betty-framework
version: 1.0.0
description: "Betty Framework is RiskExec's system for structured, auditable AI-assisted\
  \ engineering.\nWhere Claude Code provides the runtime, Betty adds methodology,\
  \ orchestration, and governance\u2014\nturning raw agent capability into a repeatable,\
  \ enterprise-grade engineering discipline.\n"
author:
  name: RiskExec
  email: platform@riskexec.com
  url: https://github.com/epieczko/betty
license: MIT
metadata:
  homepage: https://github.com/epieczko/betty
  repository: https://github.com/epieczko/betty
  documentation: https://github.com/epieczko/betty/tree/main/docs
  tags:
  - framework
  - api-development
  - workflow
  - governance
  - enterprise
  - skills
  - agents
  generated_at: '2025-10-24T22:53:29.774399+00:00'
  generated_by: plugin.sync skill
  skill_count: 7
  command_count: 7
requirements:
  python: '>=3.11'
  packages:
  - pyyaml
  optional:
  - datamodel-code-generator
permissions:
- filesystem:read
- filesystem:write
- process:execute
commands:
- name: workflow/validate
  description: 'Validate the structure of a workflow YAML file before execution.

    '
  handler:
    runtime: python
    script: skills/workflow.validate/workflow_validate.py
  parameters:
  - name: workflow.yaml
    type: string
    required: true
    description: Path to the workflow YAML file.
  permissions:
  - filesystem:read
- name: skill/hook/define
  description: Create and register validation hooks for Claude Code
  handler:
    runtime: python
    script: skills/hook.define/hook_define.py
  parameters:
  - name: event
    type: string
    required: true
    description: Hook event trigger (on_file_edit, on_file_save, on_commit, on_push,
      on_tool_use)
  - name: pattern
    type: string
    required: false
    description: File pattern to match (e.g., "*.openapi.yaml", "specs/**/*.yaml")
  - name: command
    type: string
    required: true
    description: Command to execute when hook triggers (skill name or full command)
  - name: blocking
    type: boolean
    required: false
    description: Whether hook should block operation if it fails
    default: true
  - name: timeout
    type: number
    required: false
    description: Timeout in milliseconds (default 30 seconds)
    default: 30000
  - name: description
    type: string
    required: false
    description: Human-readable description of what the hook does
  permissions:
  - filesystem:read
  - filesystem:write
- name: skill/api/validate
  description: Validate OpenAPI and AsyncAPI specifications against enterprise guidelines
  handler:
    runtime: python
    script: skills/api.validate/api_validate.py
  parameters:
  - name: spec_path
    type: string
    required: true
    description: Path to the API specification file (OpenAPI or AsyncAPI)
  - name: guideline_set
    type: string
    required: false
    description: Which API guidelines to validate against (zalando, google, microsoft)
    default: zalando
  - name: strict
    type: boolean
    required: false
    description: Enable strict mode (warnings become errors)
    default: false
  permissions:
  - filesystem:read
  - network:http
- name: skill/api/define
  description: Create OpenAPI and AsyncAPI specifications from templates
  handler:
    runtime: python
    script: skills/api.define/api_define.py
  parameters:
  - name: service_name
    type: string
    required: true
    description: Name of the service/API (e.g., user-service, order-api)
  - name: spec_type
    type: string
    required: false
    description: Type of specification (openapi or asyncapi)
    default: openapi
  - name: template
    type: string
    required: false
    description: Template to use (zalando, basic, minimal)
    default: zalando
  - name: output_dir
    type: string
    required: false
    description: Output directory for generated specification
    default: specs
  - name: version
    type: string
    required: false
    description: API version
    default: 1.0.0
  permissions:
  - filesystem:read
  - filesystem:write
- name: docs/sync/plugin-manifest
  description: Reconcile plugin.yaml with registry files. Identifies discrepancies
    and generates plugin.preview.yaml with suggested updates and a detailed diff report.
  handler:
    runtime: python
    script: skills/docs.sync.plugin_manifest/plugin_manifest_sync.py
  permissions:
  - filesystem:read
  - filesystem:write
- name: docs/sync/readme
  description: 'Sync README.md with current registry state. Updates skills tables,
    agents links, and documentation map to reflect all registered skills and agents.

    '
  handler:
    runtime: python
    script: skills/docs.sync.readme/readme_sync.py
  permissions:
  - filesystem:read
  - filesystem:write
- name: agent/run
  description: Execute a Betty agent with optional task context. Generates Claude-friendly
    prompts, invokes the Claude API (or simulates), executes planned skills, and logs
    all results to agent_logs/ directory.
  handler:
    runtime: python
    script: skills/agent.run/agent_run.py
  parameters:
  - name: agent_path
    type: string
    required: true
    description: Path to agent.yaml file or agent name (e.g., api.designer)
  - name: task_context
    type: string
    required: false
    description: Optional task or query for the agent to execute
  - name: save_log
    type: boolean
    required: false
    default: true
    description: Save execution log to agent_logs/<agent>_<timestamp>.json
  permissions:
  - filesystem:read
  - filesystem:write
  - network:http
agents:
- name: api.designer
  description: Design APIs with iterative refinement following enterprise guidelines
  manifest: agents/api.designer/agent.yaml
- name: api.analyzer
  description: Analyze API specifications for compatibility and best practices
  manifest: agents/api.analyzer/agent.yaml
config:
  paths:
    skills: skills
    agents: agents
    registry: registry
    workflows: workflows
    specs: specs
  api:
    default_template: zalando
    default_guideline: zalando
    default_version: 1.0.0
  governance:
    policy_enforcement: true
    audit_logging: true
    registry_validation: true
install:
  post_install:
  - command: python -c "from betty.config import ensure_directories; ensure_directories()"
    description: Initialize Betty Framework directories
  - command: python -c "import os; os.makedirs('specs', exist_ok=True); os.makedirs('workflows',
      exist_ok=True)"
    description: Create additional working directories
health:
  checks:
  - name: python_version
    command: python --version
    expected_pattern: Python 3\.(1[1-9]|[2-9][0-9])
  - name: yaml_support
    command: python -c "import yaml; print('ok')"
    expected_pattern: ok
  - name: registry_exists
    command: python -c "import os; print('ok' if os.path.exists('registry/skills.json')
      else 'missing')"
    expected_pattern: (ok|missing)
