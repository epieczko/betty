{
  "registry_version": "1.0.0",
  "generated_at": "2025-10-23T02:30:14.709693+00:00",
  "skills": [
    {
      "name": "agent.define",
      "version": "0.1.0",
      "description": "Create and validate Claude Code agent manifests",
      "inputs": [
        "agent_manifest.yaml"
      ],
      "outputs": [
        "validated_agent_manifest.json"
      ],
      "dependencies": [
        "skill.define"
      ],
      "status": "draft"
    },
    {
      "name": "skill.define",
      "version": "0.1.0",
      "description": "Validates and registers skill manifests for the Betty Framework",
      "inputs": [
        "skill_manifest_path"
      ],
      "outputs": [
        "validation_result.json",
        "updated_registry.json"
      ],
      "dependencies": [],
      "status": "active"
    },
    {
      "name": "workflow.validate",
      "version": "0.1.0",
      "description": "Validates Betty workflow YAML definitions to ensure correct structure and required fields.\n",
      "inputs": [
        "workflow.yaml"
      ],
      "outputs": [
        "validation_result.json"
      ],
      "dependencies": [
        "context.schema"
      ],
      "status": "active",
      "entrypoints": [
        {
          "command": "/workflow/validate",
          "handler": "workflow_validate.py",
          "runtime": "python",
          "description": "Validate the structure of a workflow YAML file before execution.\n",
          "parameters": [
            {
              "name": "workflow.yaml",
              "type": "string",
              "required": true,
              "description": "Path to the workflow YAML file."
            }
          ],
          "permissions": [
            "filesystem",
            "read"
          ]
        }
      ]
    },
    {
      "name": "registry.update",
      "version": "0.1.0",
      "description": "Updates the Betty Framework Skill Registry by adding or modifying entries based on validated skill manifests.\n",
      "inputs": [
        "skill_manifest.yaml"
      ],
      "outputs": [
        "registry_update_result.json"
      ],
      "dependencies": [
        "skill.define"
      ],
      "status": "active",
      "entrypoints": [
        {
          "command": "/registry/update",
          "handler": "registry_update.py",
          "runtime": "python",
          "description": "Add or update entries in the Skill Registry.\n",
          "parameters": [
            {
              "name": "skill_manifest.yaml",
              "type": "string",
              "required": true,
              "description": "Path to the skill manifest (.skill.yaml) being added or updated."
            }
          ],
          "permissions": [
            "filesystem",
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "test.hello",
      "version": "0.1.0",
      "description": "A simple test skill that prints hello world",
      "inputs": [],
      "outputs": [],
      "dependencies": [],
      "status": "draft"
    },
    {
      "name": "test.example",
      "version": "0.1.0",
      "description": "Example skill for testing workflow orchestration",
      "inputs": [],
      "outputs": [],
      "dependencies": [],
      "status": "draft"
    },
    {
      "name": "test.integration.temp",
      "version": "0.1.0",
      "description": "Test skill with IO",
      "inputs": [
        "input1",
        "input2"
      ],
      "outputs": [
        "output1"
      ],
      "dependencies": [],
      "status": "draft"
    },
    {
      "name": "workflow.compose",
      "version": "0.1.0",
      "description": "Executes multi-step Betty Framework workflows by chaining existing skills. Enables declarative orchestration of skill pipelines.\n",
      "inputs": [
        "workflow.yaml"
      ],
      "outputs": [
        "workflow_history.json"
      ],
      "dependencies": [
        "skill.create",
        "skill.define",
        "registry.update"
      ],
      "status": "active",
      "entrypoints": [
        {
          "command": "/workflow/compose",
          "handler": "workflow_compose.py",
          "runtime": "python",
          "description": "Execute a Betty workflow defined in a YAML file.\n",
          "parameters": [
            {
              "name": "workflow.yaml",
              "type": "string",
              "required": true,
              "description": "Path to a workflow YAML file to execute."
            }
          ],
          "permissions": [
            "filesystem",
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "skill.create",
      "version": "0.1.0",
      "description": "Generates a new Betty Framework Skill directory and manifest. Used to bootstrap new Claude Code-compatible skills inside the Betty Framework.\n",
      "inputs": [
        "skill_name",
        "description",
        "inputs",
        "outputs"
      ],
      "outputs": [
        "skill_directory",
        "skill_manifest.yaml",
        "registration_record.json"
      ],
      "dependencies": [
        "skill.define",
        "context.schema"
      ],
      "status": "active",
      "entrypoints": [
        {
          "command": "/skill/create",
          "handler": "skill_create.py",
          "runtime": "python",
          "description": "Scaffolds a new Betty Skill directory, generates its manifest, validates it with skill.define, and updates the registry.\n",
          "parameters": [
            {
              "name": "skill_name",
              "type": "string",
              "description": "Name of the new skill (e.g., runtime.execute)",
              "required": true
            },
            {
              "name": "description",
              "type": "string",
              "description": "Description of what the skill will do",
              "required": true
            },
            {
              "name": "inputs",
              "type": "string",
              "description": "Comma-separated list of input parameters (optional)",
              "required": false
            },
            {
              "name": "outputs",
              "type": "string",
              "description": "Comma-separated list of output parameters (optional)",
              "required": false
            }
          ],
          "permissions": [
            "filesystem",
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "test.lifecycle.complete",
      "version": "0.1.0",
      "description": "Lifecycle test skill",
      "inputs": [],
      "outputs": [],
      "dependencies": [],
      "status": "draft"
    },
    {
      "name": "policy.enforce",
      "version": "0.1.0",
      "description": "Validates operations against organizational policies before execution",
      "inputs": [
        "action",
        "target",
        "policy_set"
      ],
      "outputs": [
        "validation_result.json",
        "policy_violations.json"
      ],
      "dependencies": [],
      "status": "active"
    }
  ]
}