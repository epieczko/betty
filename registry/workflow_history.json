[
  {
    "workflow": "create_workflow_validate.yaml",
    "timestamp": "2025-10-22T23:25:11.834841",
    "steps": [
      {
        "skill": "skill.create",
        "args": [
          "workflow.validate",
          "Validates workflow definitions"
        ],
        "output": ""
      },
      {
        "skill": "skill.define",
        "args": [
          "skills/workflow.validate/skill.yaml"
        ],
        "output": ""
      },
      {
        "skill": "registry.update",
        "args": [
          "skills/workflow.validate/skill.yaml"
        ],
        "output": "{\n  \"status\": \"success\",\n  \"updated\": \"workflow.validate\",\n  \"registry_path\": \"C:\\\\CoDE\\\\source\\\\betty\\\\registry\\\\skills.json\",\n  \"timestamp\": \"2025-10-22T23:25:12.156389+00:00\"\n}"
      }
    ]
  },
  {
    "workflow": "test_lifecycle.yaml",
    "workflow_path": "workflows/test_lifecycle.yaml",
    "timestamp": "2025-10-23T00:13:56.319229+00:00",
    "steps": [
      {
        "step_number": 1,
        "skill": "skill.create",
        "args": [
          "test.example",
          "Example skill for testing workflow orchestration"
        ],
        "output": "2025-10-23 00:13:56 - __main__ - INFO - Created skill directory: /home/user/betty/skills/test.example\n2025-10-23 00:13:56 - __main__ - INFO - Created manifest: /home/user/betty/skills/test.example/skill.yaml\n2025-10-23 00:13:56 - __main__ - INFO - Created documentation: /home/user/betty/skills/test.example/SKILL.md\n2025-10-23 00:13:56 - __main__ - INFO - Created handler: /home/user/betty/skills/test.example/test_example.py\n2025-10-23 00:13:56 - __main__ - INFO - Validating new skill with skill.define...\n2025-10-23 00:13:56 - __main__ - INFO - Validation succeeded\n2025-10-23 00:13:56 - __main__ - INFO - Updating registry via registry.update...\n2025-10-23 00:13:56 - __main__ - INFO - Registry updated successfully\n2025-10-23 00:13:56 - __main__ - INFO - \u2705 Successfully created skill: test.example\n{\n  \"status\": \"success\",\n  \"skill_name\": \"test.example\",\n  \"skill_path\": \"/home/user/betty/skills/test.example\",\n  \"manifest_path\": \"/home/user/betty/skills/test.example/skill.yaml\",\n  \"validation\": \"passed\",\n  \"registry_updated\": true,\n  \"timestamp\": \"2025-10-23T00:13:56.634600+00:00\"\n}",
        "stderr": null,
        "returncode": 0,
        "status": "success"
      },
      {
        "step_number": 2,
        "skill": "skill.define",
        "args": [
          "skills/test.example/skill.yaml"
        ],
        "output": "2025-10-23 00:13:56 - __main__ - INFO - Validating manifest: skills/test.example/skill.yaml\n2025-10-23 00:13:56 - __main__ - INFO - \u2705 Manifest validation passed\n2025-10-23 00:13:56 - __main__ - INFO - \ud83d\udd01 Delegating registry update to registry.update skill...\n2025-10-23 00:13:56 - __main__ - INFO - Registry update succeeded\n{\n  \"valid\": true,\n  \"missing\": [],\n  \"path\": \"skills/test.example/skill.yaml\",\n  \"manifest\": {\n    \"name\": \"test.example\",\n    \"version\": \"0.1.0\",\n    \"description\": \"Example skill for testing workflow orchestration\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"dependencies\": [],\n    \"status\": \"draft\"\n  },\n  \"status\": \"registered\",\n  \"registry_updated\": true\n}",
        "stderr": null,
        "returncode": 0,
        "status": "success"
      },
      {
        "step_number": 3,
        "skill": "registry.update",
        "args": [
          "skills/test.example/skill.yaml"
        ],
        "output": "2025-10-23 00:13:56 - __main__ - INFO - Updating registry with skill: test.example\n2025-10-23 00:13:56 - __main__ - INFO - \u2705 Successfully updated registry for: test.example\n{\n  \"status\": \"success\",\n  \"updated\": \"test.example\",\n  \"registry_path\": \"/home/user/betty/registry/skills.json\",\n  \"total_skills\": 8,\n  \"timestamp\": \"2025-10-23T00:13:56.884105+00:00\"\n}",
        "stderr": null,
        "returncode": 0,
        "status": "success"
      }
    ],
    "status": "success",
    "completed_at": "2025-10-23T00:13:56.891522+00:00"
  },
  {
    "workflow": "tmpybggo4el.yaml",
    "workflow_path": "/home/user/betty/workflows/tmpybggo4el.yaml",
    "timestamp": "2025-10-23T00:16:50.480755+00:00",
    "steps": [
      {
        "step_number": 1,
        "skill": "skill.define",
        "args": [
          "skills/skill.create/skill.yaml"
        ],
        "output": "2025-10-23 00:16:50 - __main__ - INFO - Validating manifest: skills/skill.create/skill.yaml\n2025-10-23 00:16:50 - __main__ - INFO - \u2705 Manifest validation passed\n2025-10-23 00:16:50 - __main__ - INFO - \ud83d\udd01 Delegating registry update to registry.update skill...\n2025-10-23 00:16:50 - __main__ - INFO - Registry update succeeded\n{\n  \"valid\": true,\n  \"missing\": [],\n  \"path\": \"skills/skill.create/skill.yaml\",\n  \"manifest\": {\n    \"name\": \"skill.create\",\n    \"version\": \"0.1.0\",\n    \"description\": \"Generates a new Betty Framework Skill directory and manifest. Used to bootstrap new Claude Code-compatible skills inside the Betty Framework.\\n\",\n    \"inputs\": [\n      \"skill_name\",\n      \"description\",\n      \"inputs\",\n      \"outputs\"\n    ],\n    \"outputs\": [\n      \"skill_directory\",\n      \"skill_manifest.yaml\",\n      \"registration_record.json\"\n    ],\n    \"dependencies\": [\n      \"skill.define\",\n      \"context.schema\"\n    ],\n    \"status\": \"active\",\n    \"entrypoints\": [\n      {\n        \"command\": \"/skill/create\",\n        \"handler\": \"skill_create.py\",\n        \"runtime\": \"python\",\n        \"description\": \"Scaffolds a new Betty Skill directory, generates its manifest, validates it with skill.define, and updates the registry.\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"skill_name\",\n            \"type\": \"string\",\n            \"description\": \"Name of the new skill (e.g., runtime.execute)\",\n            \"required\": true\n          },\n          {\n            \"name\": \"description\",\n            \"type\": \"string\",\n            \"description\": \"Description of what the skill will do\",\n            \"required\": true\n          },\n          {\n            \"name\": \"inputs\",\n            \"type\": \"string\",\n            \"description\": \"Comma-separated list of input parameters (optional)\",\n            \"required\": false\n          },\n          {\n            \"name\": \"outputs\",\n            \"type\": \"string\",\n            \"description\": \"Comma-separated list of output parameters (optional)\",\n            \"required\": false\n          }\n        ],\n        \"permissions\": [\n          \"filesystem\",\n          \"read\",\n          \"write\"\n        ]\n      }\n    ]\n  },\n  \"status\": \"registered\",\n  \"registry_updated\": true\n}",
        "stderr": null,
        "returncode": 0,
        "status": "success"
      }
    ],
    "status": "success",
    "completed_at": "2025-10-23T00:16:50.639839+00:00"
  },
  {
    "workflow": "tmp30h0na5t.yaml",
    "workflow_path": "/home/user/betty/workflows/tmp30h0na5t.yaml",
    "timestamp": "2025-10-23T00:17:26.514094+00:00",
    "steps": [
      {
        "step_number": 1,
        "skill": "skill.define",
        "args": [
          "skills/skill.create/skill.yaml"
        ],
        "output": "2025-10-23 00:17:26 - __main__ - INFO - Validating manifest: skills/skill.create/skill.yaml\n2025-10-23 00:17:26 - __main__ - INFO - \u2705 Manifest validation passed\n2025-10-23 00:17:26 - __main__ - INFO - \ud83d\udd01 Delegating registry update to registry.update skill...\n2025-10-23 00:17:26 - __main__ - INFO - Registry update succeeded\n{\n  \"valid\": true,\n  \"missing\": [],\n  \"path\": \"skills/skill.create/skill.yaml\",\n  \"manifest\": {\n    \"name\": \"skill.create\",\n    \"version\": \"0.1.0\",\n    \"description\": \"Generates a new Betty Framework Skill directory and manifest. Used to bootstrap new Claude Code-compatible skills inside the Betty Framework.\\n\",\n    \"inputs\": [\n      \"skill_name\",\n      \"description\",\n      \"inputs\",\n      \"outputs\"\n    ],\n    \"outputs\": [\n      \"skill_directory\",\n      \"skill_manifest.yaml\",\n      \"registration_record.json\"\n    ],\n    \"dependencies\": [\n      \"skill.define\",\n      \"context.schema\"\n    ],\n    \"status\": \"active\",\n    \"entrypoints\": [\n      {\n        \"command\": \"/skill/create\",\n        \"handler\": \"skill_create.py\",\n        \"runtime\": \"python\",\n        \"description\": \"Scaffolds a new Betty Skill directory, generates its manifest, validates it with skill.define, and updates the registry.\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"skill_name\",\n            \"type\": \"string\",\n            \"description\": \"Name of the new skill (e.g., runtime.execute)\",\n            \"required\": true\n          },\n          {\n            \"name\": \"description\",\n            \"type\": \"string\",\n            \"description\": \"Description of what the skill will do\",\n            \"required\": true\n          },\n          {\n            \"name\": \"inputs\",\n            \"type\": \"string\",\n            \"description\": \"Comma-separated list of input parameters (optional)\",\n            \"required\": false\n          },\n          {\n            \"name\": \"outputs\",\n            \"type\": \"string\",\n            \"description\": \"Comma-separated list of output parameters (optional)\",\n            \"required\": false\n          }\n        ],\n        \"permissions\": [\n          \"filesystem\",\n          \"read\",\n          \"write\"\n        ]\n      }\n    ]\n  },\n  \"status\": \"registered\",\n  \"registry_updated\": true\n}",
        "stderr": null,
        "returncode": 0,
        "status": "success"
      }
    ],
    "status": "success",
    "completed_at": "2025-10-23T00:17:26.683558+00:00"
  },
  {
    "workflow": "tmpctsp1zxc.yaml",
    "workflow_path": "/home/user/betty/workflows/tmpctsp1zxc.yaml",
    "timestamp": "2025-10-23T00:17:55.330204+00:00",
    "steps": [
      {
        "step_number": 1,
        "skill": "skill.define",
        "args": [
          "skills/skill.create/skill.yaml"
        ],
        "output": "2025-10-23 00:17:55 - __main__ - INFO - Validating manifest: skills/skill.create/skill.yaml\n2025-10-23 00:17:55 - __main__ - INFO - \u2705 Manifest validation passed\n2025-10-23 00:17:55 - __main__ - INFO - \ud83d\udd01 Delegating registry update to registry.update skill...\n2025-10-23 00:17:55 - __main__ - INFO - Registry update succeeded\n{\n  \"valid\": true,\n  \"missing\": [],\n  \"path\": \"skills/skill.create/skill.yaml\",\n  \"manifest\": {\n    \"name\": \"skill.create\",\n    \"version\": \"0.1.0\",\n    \"description\": \"Generates a new Betty Framework Skill directory and manifest. Used to bootstrap new Claude Code-compatible skills inside the Betty Framework.\\n\",\n    \"inputs\": [\n      \"skill_name\",\n      \"description\",\n      \"inputs\",\n      \"outputs\"\n    ],\n    \"outputs\": [\n      \"skill_directory\",\n      \"skill_manifest.yaml\",\n      \"registration_record.json\"\n    ],\n    \"dependencies\": [\n      \"skill.define\",\n      \"context.schema\"\n    ],\n    \"status\": \"active\",\n    \"entrypoints\": [\n      {\n        \"command\": \"/skill/create\",\n        \"handler\": \"skill_create.py\",\n        \"runtime\": \"python\",\n        \"description\": \"Scaffolds a new Betty Skill directory, generates its manifest, validates it with skill.define, and updates the registry.\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"skill_name\",\n            \"type\": \"string\",\n            \"description\": \"Name of the new skill (e.g., runtime.execute)\",\n            \"required\": true\n          },\n          {\n            \"name\": \"description\",\n            \"type\": \"string\",\n            \"description\": \"Description of what the skill will do\",\n            \"required\": true\n          },\n          {\n            \"name\": \"inputs\",\n            \"type\": \"string\",\n            \"description\": \"Comma-separated list of input parameters (optional)\",\n            \"required\": false\n          },\n          {\n            \"name\": \"outputs\",\n            \"type\": \"string\",\n            \"description\": \"Comma-separated list of output parameters (optional)\",\n            \"required\": false\n          }\n        ],\n        \"permissions\": [\n          \"filesystem\",\n          \"read\",\n          \"write\"\n        ]\n      }\n    ]\n  },\n  \"status\": \"registered\",\n  \"registry_updated\": true\n}",
        "stderr": null,
        "returncode": 0,
        "status": "success"
      }
    ],
    "status": "success",
    "completed_at": "2025-10-23T00:17:55.475434+00:00"
  },
  {
    "workflow": "create_workflow_validate.yaml",
    "workflow_path": "workflows/create_workflow_validate.yaml",
    "timestamp": "2025-10-23T00:18:10.528701+00:00",
    "steps": [
      {
        "step_number": 1,
        "skill": "skill.create",
        "args": [
          "workflow.validate",
          "Validates workflow definitions"
        ],
        "output": "2025-10-23 00:18:10 - __main__ - ERROR - Skill 'workflow.validate' already exists\n{\n  \"error\": \"ManifestError\",\n  \"message\": \"Skill 'workflow.validate' already exists\",\n  \"details\": {\n    \"skill_path\": \"/home/user/betty/skills/workflow.validate\"\n  }\n}",
        "stderr": null,
        "returncode": 1,
        "status": "failed"
      }
    ],
    "status": "failed",
    "failed_steps": [
      {
        "step": 1,
        "skill": "skill.create",
        "returncode": 1
      }
    ],
    "completed_at": "2025-10-23T00:18:10.612080+00:00"
  },
  {
    "workflow": "tmp4sqt460m.yaml",
    "workflow_path": "/home/user/betty/workflows/tmp4sqt460m.yaml",
    "timestamp": "2025-10-23T00:18:44.427195+00:00",
    "steps": [
      {
        "step_number": 1,
        "skill": "skill.define",
        "args": [
          "skills/skill.create/skill.yaml"
        ],
        "output": "2025-10-23 00:18:44 - __main__ - INFO - Validating manifest: skills/skill.create/skill.yaml\n2025-10-23 00:18:44 - __main__ - INFO - \u2705 Manifest validation passed\n2025-10-23 00:18:44 - __main__ - INFO - \ud83d\udd01 Delegating registry update to registry.update skill...\n2025-10-23 00:18:44 - __main__ - INFO - Registry update succeeded\n{\n  \"valid\": true,\n  \"missing\": [],\n  \"path\": \"skills/skill.create/skill.yaml\",\n  \"manifest\": {\n    \"name\": \"skill.create\",\n    \"version\": \"0.1.0\",\n    \"description\": \"Generates a new Betty Framework Skill directory and manifest. Used to bootstrap new Claude Code-compatible skills inside the Betty Framework.\\n\",\n    \"inputs\": [\n      \"skill_name\",\n      \"description\",\n      \"inputs\",\n      \"outputs\"\n    ],\n    \"outputs\": [\n      \"skill_directory\",\n      \"skill_manifest.yaml\",\n      \"registration_record.json\"\n    ],\n    \"dependencies\": [\n      \"skill.define\",\n      \"context.schema\"\n    ],\n    \"status\": \"active\",\n    \"entrypoints\": [\n      {\n        \"command\": \"/skill/create\",\n        \"handler\": \"skill_create.py\",\n        \"runtime\": \"python\",\n        \"description\": \"Scaffolds a new Betty Skill directory, generates its manifest, validates it with skill.define, and updates the registry.\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"skill_name\",\n            \"type\": \"string\",\n            \"description\": \"Name of the new skill (e.g., runtime.execute)\",\n            \"required\": true\n          },\n          {\n            \"name\": \"description\",\n            \"type\": \"string\",\n            \"description\": \"Description of what the skill will do\",\n            \"required\": true\n          },\n          {\n            \"name\": \"inputs\",\n            \"type\": \"string\",\n            \"description\": \"Comma-separated list of input parameters (optional)\",\n            \"required\": false\n          },\n          {\n            \"name\": \"outputs\",\n            \"type\": \"string\",\n            \"description\": \"Comma-separated list of output parameters (optional)\",\n            \"required\": false\n          }\n        ],\n        \"permissions\": [\n          \"filesystem\",\n          \"read\",\n          \"write\"\n        ]\n      }\n    ]\n  },\n  \"status\": \"registered\",\n  \"registry_updated\": true\n}",
        "stderr": null,
        "returncode": 0,
        "status": "success"
      }
    ],
    "status": "success",
    "completed_at": "2025-10-23T00:18:44.597321+00:00"
  },
  {
    "workflow": "tmpt_h8_31t.yaml",
    "workflow_path": "/home/user/betty/workflows/tmpt_h8_31t.yaml",
    "timestamp": "2025-10-23T00:19:00.637714+00:00",
    "steps": [
      {
        "step_number": 1,
        "skill": "skill.define",
        "args": [
          "skills/skill.create/skill.yaml"
        ],
        "output": "2025-10-23 00:19:00 - __main__ - INFO - Validating manifest: skills/skill.create/skill.yaml\n2025-10-23 00:19:00 - __main__ - INFO - \u2705 Manifest validation passed\n2025-10-23 00:19:00 - __main__ - INFO - \ud83d\udd01 Delegating registry update to registry.update skill...\n2025-10-23 00:19:00 - __main__ - INFO - Registry update succeeded\n{\n  \"valid\": true,\n  \"missing\": [],\n  \"path\": \"skills/skill.create/skill.yaml\",\n  \"manifest\": {\n    \"name\": \"skill.create\",\n    \"version\": \"0.1.0\",\n    \"description\": \"Generates a new Betty Framework Skill directory and manifest. Used to bootstrap new Claude Code-compatible skills inside the Betty Framework.\\n\",\n    \"inputs\": [\n      \"skill_name\",\n      \"description\",\n      \"inputs\",\n      \"outputs\"\n    ],\n    \"outputs\": [\n      \"skill_directory\",\n      \"skill_manifest.yaml\",\n      \"registration_record.json\"\n    ],\n    \"dependencies\": [\n      \"skill.define\",\n      \"context.schema\"\n    ],\n    \"status\": \"active\",\n    \"entrypoints\": [\n      {\n        \"command\": \"/skill/create\",\n        \"handler\": \"skill_create.py\",\n        \"runtime\": \"python\",\n        \"description\": \"Scaffolds a new Betty Skill directory, generates its manifest, validates it with skill.define, and updates the registry.\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"skill_name\",\n            \"type\": \"string\",\n            \"description\": \"Name of the new skill (e.g., runtime.execute)\",\n            \"required\": true\n          },\n          {\n            \"name\": \"description\",\n            \"type\": \"string\",\n            \"description\": \"Description of what the skill will do\",\n            \"required\": true\n          },\n          {\n            \"name\": \"inputs\",\n            \"type\": \"string\",\n            \"description\": \"Comma-separated list of input parameters (optional)\",\n            \"required\": false\n          },\n          {\n            \"name\": \"outputs\",\n            \"type\": \"string\",\n            \"description\": \"Comma-separated list of output parameters (optional)\",\n            \"required\": false\n          }\n        ],\n        \"permissions\": [\n          \"filesystem\",\n          \"read\",\n          \"write\"\n        ]\n      }\n    ]\n  },\n  \"status\": \"registered\",\n  \"registry_updated\": true\n}",
        "stderr": null,
        "returncode": 0,
        "status": "success"
      }
    ],
    "status": "success",
    "completed_at": "2025-10-23T00:19:00.827869+00:00"
  },
  {
    "workflow": "tmpf_x8r7ze.yaml",
    "workflow_path": "/home/user/betty/workflows/tmpf_x8r7ze.yaml",
    "started_at": "2025-10-23T16:45:27.944500+00:00",
    "fail_fast": true,
    "steps": [
      {
        "step_number": 1,
        "skill": "skill.define",
        "args": [
          "skills/skill.create/skill.yaml"
        ],
        "status": "success",
        "returncode": 0,
        "stdout": "2025-10-23 16:45:28 - __main__ - INFO - Validating manifest: skills/skill.create/skill.yaml\n2025-10-23 16:45:28 - __main__ - INFO - \u2705 Manifest validation passed\n2025-10-23 16:45:28 - __main__ - INFO - \ud83d\udd01 Delegating registry update to registry.update skill...\n2025-10-23 16:45:28 - __main__ - ERROR - Registry update failed: \n{\n  \"ok\": true,\n  \"status\": \"success\",\n  \"errors\": [],\n  \"path\": \"skills/skill.create/skill.yaml\",\n  \"details\": {\n    \"valid\": true,\n    \"missing\": [],\n    \"path\": \"skills/skill.create/skill.yaml\",\n    \"manifest\": {\n      \"name\": \"skill.create\",\n      \"version\": \"0.1.0\",\n      \"description\": \"Generates a new Betty Framework Skill directory and manifest. Used to bootstrap new Claude Code-compatible skills inside the Betty Framework.\\n\",\n      \"inputs\": [\n        \"skill_name\",\n        \"description\",\n        \"inputs\",\n        \"outputs\"\n      ],\n      \"outputs\": [\n        \"skill_directory\",\n        \"manifest_path\",\n        \"registration_record.json\"\n      ],\n      \"dependencies\": [\n        \"skill.define\",\n        \"context.schema\"\n      ],\n      \"status\": \"active\",\n      \"entrypoints\": [\n        {\n          \"command\": \"/skill/create\",\n          \"handler\": \"skill_create.py\",\n          \"runtime\": \"python\",\n          \"description\": \"Scaffolds a new Betty Skill directory, generates its manifest, validates it with skill.define, and updates the registry.\\n\",\n          \"parameters\": [\n            {\n              \"name\": \"skill_name\",\n              \"type\": \"string\",\n              \"description\": \"Name of the new skill (e.g., runtime.execute)\",\n              \"required\": true\n            },\n            {\n              \"name\": \"description\",\n              \"type\": \"string\",\n              \"description\": \"Description of what the skill will do\",\n              \"required\": true\n            },\n            {\n              \"name\": \"inputs\",\n              \"type\": \"string\",\n              \"description\": \"Comma-separated list of input parameters (optional)\",\n              \"required\": false\n            },\n            {\n              \"name\": \"outputs\",\n              \"type\": \"string\",\n              \"description\": \"Comma-separated list of output parameters (optional)\",\n              \"required\": false\n            }\n          ],\n          \"permissions\": [\n            \"filesystem\",\n            \"read\",\n            \"write\"\n          ]\n        }\n      ]\n    },\n    \"status\": \"validated\",\n    \"registry_updated\": false\n  }\n}\n",
        "stderr": "",
        "parsed": {
          "ok": true,
          "status": "success",
          "errors": [],
          "path": "skills/skill.create/skill.yaml",
          "details": {
            "valid": true,
            "missing": [],
            "path": "skills/skill.create/skill.yaml",
            "manifest": {
              "name": "skill.create",
              "version": "0.1.0",
              "description": "Generates a new Betty Framework Skill directory and manifest. Used to bootstrap new Claude Code-compatible skills inside the Betty Framework.\n",
              "inputs": [
                "skill_name",
                "description",
                "inputs",
                "outputs"
              ],
              "outputs": [
                "skill_directory",
                "manifest_path",
                "registration_record.json"
              ],
              "dependencies": [
                "skill.define",
                "context.schema"
              ],
              "status": "active",
              "entrypoints": [
                {
                  "command": "/skill/create",
                  "handler": "skill_create.py",
                  "runtime": "python",
                  "description": "Scaffolds a new Betty Skill directory, generates its manifest, validates it with skill.define, and updates the registry.\n",
                  "parameters": [
                    {
                      "name": "skill_name",
                      "type": "string",
                      "description": "Name of the new skill (e.g., runtime.execute)",
                      "required": true
                    },
                    {
                      "name": "description",
                      "type": "string",
                      "description": "Description of what the skill will do",
                      "required": true
                    },
                    {
                      "name": "inputs",
                      "type": "string",
                      "description": "Comma-separated list of input parameters (optional)",
                      "required": false
                    },
                    {
                      "name": "outputs",
                      "type": "string",
                      "description": "Comma-separated list of output parameters (optional)",
                      "required": false
                    }
                  ],
                  "permissions": [
                    "filesystem",
                    "read",
                    "write"
                  ]
                }
              ]
            },
            "status": "validated",
            "registry_updated": false
          }
        },
        "parse_error": null,
        "errors": [],
        "duration_ms": 237
      }
    ],
    "status": "success",
    "validation": {
      "step": "validation",
      "skill": "workflow.validate",
      "args": [
        "/home/user/betty/workflows/tmpf_x8r7ze.yaml"
      ],
      "returncode": 0,
      "stdout": "{\n  \"ok\": true,\n  \"status\": \"success\",\n  \"errors\": [],\n  \"path\": \"/home/user/betty/workflows/tmpf_x8r7ze.yaml\",\n  \"details\": {\n    \"valid\": true,\n    \"errors\": [],\n    \"status\": \"validated\",\n    \"path\": \"/home/user/betty/workflows/tmpf_x8r7ze.yaml\"\n  }\n}\n",
      "stderr": "",
      "parsed": {
        "ok": true,
        "status": "success",
        "errors": [],
        "path": "/home/user/betty/workflows/tmpf_x8r7ze.yaml",
        "details": {
          "valid": true,
          "errors": [],
          "status": "validated",
          "path": "/home/user/betty/workflows/tmpf_x8r7ze.yaml"
        }
      },
      "parse_error": null,
      "status": "success",
      "errors": []
    },
    "errors": [],
    "completed_at": "2025-10-23T16:45:28.310569+00:00"
  },
  {
    "workflow": "temp_fail_fast.yaml",
    "workflow_path": "/home/user/betty/workflows/temp_fail_fast.yaml",
    "started_at": "2025-10-23T16:45:28.479645+00:00",
    "fail_fast": true,
    "steps": [
      {
        "step_number": 1,
        "skill": "skill.define",
        "args": [
          "nonexistent_skill.yaml"
        ],
        "status": "failed",
        "returncode": 1,
        "stdout": "2025-10-23 16:45:28 - __main__ - ERROR - Unexpected error: Path does not exist: nonexistent_skill.yaml\n{\n  \"ok\": false,\n  \"status\": \"failed\",\n  \"errors\": [\n    \"Path does not exist: nonexistent_skill.yaml\"\n  ],\n  \"path\": \"nonexistent_skill.yaml\",\n  \"details\": {\n    \"error\": {\n      \"error\": \"ValidationError\",\n      \"message\": \"Path does not exist: nonexistent_skill.yaml\",\n      \"details\": {},\n      \"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/user/betty/skills/skill.define/skill_define.py\\\", line 161, in main\\n    validation = validate_manifest(path)\\n                 ^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"/home/user/betty/skills/skill.define/skill_define.py\\\", line 80, in validate_manifest\\n    validate_path(path, must_exist=True)\\n  File \\\"/home/user/betty/betty/validation.py\\\", line 70, in validate_path\\n    raise ValidationError(f\\\"Path does not exist: {path}\\\")\\nbetty.validation.ValidationError: Path does not exist: nonexistent_skill.yaml\\n\"\n    }\n  }\n}\n",
        "stderr": "",
        "parsed": {
          "ok": false,
          "status": "failed",
          "errors": [
            "Path does not exist: nonexistent_skill.yaml"
          ],
          "path": "nonexistent_skill.yaml",
          "details": {
            "error": {
              "error": "ValidationError",
              "message": "Path does not exist: nonexistent_skill.yaml",
              "details": {},
              "traceback": "Traceback (most recent call last):\n  File \"/home/user/betty/skills/skill.define/skill_define.py\", line 161, in main\n    validation = validate_manifest(path)\n                 ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/user/betty/skills/skill.define/skill_define.py\", line 80, in validate_manifest\n    validate_path(path, must_exist=True)\n  File \"/home/user/betty/betty/validation.py\", line 70, in validate_path\n    raise ValidationError(f\"Path does not exist: {path}\")\nbetty.validation.ValidationError: Path does not exist: nonexistent_skill.yaml\n"
            }
          }
        },
        "parse_error": null,
        "errors": [
          "Path does not exist: nonexistent_skill.yaml"
        ],
        "duration_ms": 76
      }
    ],
    "status": "failed",
    "validation": {
      "step": "validation",
      "skill": "workflow.validate",
      "args": [
        "/home/user/betty/workflows/temp_fail_fast.yaml"
      ],
      "returncode": 0,
      "stdout": "{\n  \"ok\": true,\n  \"status\": \"success\",\n  \"errors\": [],\n  \"path\": \"/home/user/betty/workflows/temp_fail_fast.yaml\",\n  \"details\": {\n    \"valid\": true,\n    \"errors\": [],\n    \"status\": \"validated\",\n    \"path\": \"/home/user/betty/workflows/temp_fail_fast.yaml\"\n  }\n}\n",
      "stderr": "",
      "parsed": {
        "ok": true,
        "status": "success",
        "errors": [],
        "path": "/home/user/betty/workflows/temp_fail_fast.yaml",
        "details": {
          "valid": true,
          "errors": [],
          "status": "validated",
          "path": "/home/user/betty/workflows/temp_fail_fast.yaml"
        }
      },
      "parse_error": null,
      "status": "success",
      "errors": []
    },
    "failed_steps": [
      {
        "step": 1,
        "skill": "skill.define",
        "returncode": 1,
        "errors": [
          "Path does not exist: nonexistent_skill.yaml"
        ]
      }
    ],
    "errors": [
      "Path does not exist: nonexistent_skill.yaml"
    ],
    "completed_at": "2025-10-23T16:45:28.691243+00:00"
  }
]