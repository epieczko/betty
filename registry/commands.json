{
  "registry_version": "1.0.0",
  "generated_at": "2025-11-01T16:58:49.267594+00:00",
  "commands": [
    {
      "name": "/test-command",
      "version": "0.1.0",
      "description": "Test command for validating command.define skill",
      "execution": {
        "type": "skill",
        "target": "api.validate",
        "context": {
          "format": "human"
        }
      },
      "parameters": [
        {
          "name": "service_name",
          "type": "string",
          "required": true,
          "description": "Name of the service"
        },
        {
          "name": "spec_type",
          "type": "enum",
          "values": [
            "openapi",
            "asyncapi"
          ],
          "default": "openapi",
          "description": "Type of API specification"
        }
      ],
      "status": "draft",
      "tags": [
        "test",
        "validation"
      ]
    },
    {
      "name": "/test-registry-command",
      "version": "1.0.0",
      "description": "Test registry update",
      "execution": {
        "type": "skill",
        "target": "api.validate"
      },
      "parameters": [],
      "status": "draft",
      "tags": [
        "test"
      ]
    },
    {
      "name": "/test-update-command",
      "version": "1.0.1",
      "description": "Updated description",
      "execution": {
        "type": "skill",
        "target": "api.validate"
      },
      "parameters": [],
      "status": "draft",
      "tags": []
    },
    {
      "name": "/test-workflow-command",
      "version": "1.0.0",
      "description": "Test complete workflow",
      "execution": {
        "target": "api.validate",
        "type": "skill"
      },
      "parameters": [
        {
          "description": "Input parameter",
          "name": "input",
          "required": true,
          "type": "string"
        }
      ],
      "status": "active",
      "tags": [
        "test",
        "workflow"
      ]
    },
    {
      "name": "/meta-config-router",
      "version": "0.1.0",
      "description": "Configure Claude Code Router for multi-model LLM support (OpenAI, Claude, Ollama, etc.)",
      "execution": {
        "type": "agent",
        "target": "meta.config.router",
        "context": {
          "mode": "oneshot"
        }
      },
      "parameters": [
        {
          "name": "routing_config_path",
          "type": "string",
          "required": true,
          "description": "Path to YAML or JSON input file containing router configuration"
        },
        {
          "name": "apply_config",
          "type": "boolean",
          "required": false,
          "default": false,
          "description": "Write configuration to ~/.claude-code-router/config.json"
        },
        {
          "name": "output_mode",
          "type": "string",
          "required": false,
          "default": "preview",
          "description": "Output mode: preview, file, or both"
        }
      ],
      "status": "active",
      "tags": [
        "llm",
        "router",
        "configuration",
        "meta"
      ],
      "updated_at": "2025-11-01T16:58:49.267561+00:00"
    }
  ]
}