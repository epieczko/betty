# Release Notes
# See also: artifact_descriptions/release-notes.md for complete guidance

# The Release Notes artifact is a critical communication deliverable that documents changes, improvements, and breaking modifications introduced in each software release version. Following Semantic Vers...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# Release notes communicate what changed in each software version using Keep a Changelog format, enabling stakeholders to understand new features, bug fixes, breaking changes, deprecations, security patches, and required migration actions. They follow Semantic Versioning 2.0.0 conventions and support 

# BEST PRACTICES
# - Semantic Versioning Compliance: Strictly follow SemVer 2.0.0 - MAJOR for breaking changes, MINOR for backward-compatible features, P
# - Keep a Changelog Format: Use standardized sections (Added, Changed, Deprecated, Removed, Fixed, Security) for consistency
# - Breaking Change Prominence: Clearly highlight breaking changes at the top with BREAKING CHANGE: prefix and migration guides
# - Conventional Commits Alignment: Generate release notes from Conventional Commits (feat:, fix:, chore:, docs:, refactor:, perf:, test
# - Automation: Use semantic-release, conventional-changelog, or release-please for automated generation from git hi

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Version identification following SemVer 2.0.0 (MAJOR.MINOR.PATCH, e.g., 2.3.1)"
      - "Release date and Git tag/commit references"
      - "Added features (MINOR version bumps), bug fixes (PATCH bumps), breaking changes "
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
