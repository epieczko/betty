# Enterprise Data Model
# See also: artifact_descriptions/enterprise-data-model.md for complete guidance

# The Enterprise Data Model is a critical artifact for enterprise data architecture, providing conceptual, logical, and physical representations of organizational data assets. This model establishes the...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact establishes the authoritative enterprise-wide data model spanning conceptual, logical, and physical layers. It defines canonical enterprise entities, master data structures, reference data standards, and data relationships that ensure consistency, integration, and governance across all

# BEST PRACTICES
# - Modeling Layer Separation: - **Conceptual Models**: Focus on business concepts; keep implementation details out; use for stakeh
# - Master Data Management: - **Golden Records**: Establish clear rules for creating golden records from multiple source systems
# - Normalization & Design: - **Normalize First**: Start with fully normalized logical models (3NF/BCNF); denormalize only with 
# - Enterprise Integration: - **Canonical Data Model**: Maintain CDM as integration layer; map all system-specific models to CDM
# - Naming Standards: - **Consistent Nomenclature**: Establish and enforce naming conventions (PascalCase, snake_case, etc

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Conceptual data model (high-level business entities and relationships)"
      - "Logical data model (normalized entities, attributes, relationships, keys)"
      - "Physical data model (database-specific schemas, tables, indexes, partitions)"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
