# Patterns And Anti Patterns Library
# See also: artifact_descriptions/patterns-and-anti-patterns-library.md for complete guidance

# The Integration Patterns and Anti-Patterns Library is a curated knowledge base documenting proven integration patterns, microservices patterns, API design patterns, and anti-patterns to avoid when bui

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# This library provides architects, engineers, and technical leads with a comprehensive catalog of integration and microservices patterns to apply when designing distributed systems, along with anti-patterns to avoid. It solves the recurring problem of teams reinventing integration solutions by docume...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Structured Pattern Format: Use consistent template: Problem, Context, Forces, Solution, Consequences, Implementation, Examples,
# - Visual Diagrams: Include sequence diagrams, architecture diagrams, and data flow diagrams for each pattern
# - Concrete Examples: Provide working code examples in organizational primary languages (Java, Python, Node.js, Go)
# - Technology Mapping: Map patterns to specific implementations (Kong plugins, Istio configs, Spring annotations)
# - When to Use/Avoid: Explicitly document applicability criteria and scenarios where pattern should not be used

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Enterprise Integration Patterns (Hohpe & Woolf)"
      - "API Gateway Patterns"
      - "Microservices Patterns"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
