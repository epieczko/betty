# Patterns And Anti Patterns Library
# See also: artifact_descriptions/patterns-and-anti-patterns-library.md for complete guidance

# The Integration Patterns and Anti-Patterns Library is a curated knowledge base documenting proven integration patterns, microservices patterns, API design patterns, and anti-patterns to avoid when bui...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This library provides architects, engineers, and technical leads with a comprehensive catalog of integration and microservices patterns to apply when designing distributed systems, along with anti-patterns to avoid. It solves the recurring problem of teams reinventing integration solutions by docume

# BEST PRACTICES
# - Structured Pattern Format: Use consistent template: Problem, Context, Forces, Solution, Consequences, Implementation, Examples,
# - Visual Diagrams: Include sequence diagrams, architecture diagrams, and data flow diagrams for each pattern
# - Concrete Examples: Provide working code examples in organizational primary languages (Java, Python, Node.js, Go)
# - Technology Mapping: Map patterns to specific implementations (Kong plugins, Istio configs, Spring annotations)
# - When to Use/Avoid: Explicitly document applicability criteria and scenarios where pattern should not be used

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Enterprise Integration Patterns (Hohpe & Woolf)"
      - "API Gateway Patterns"
      - "Microservices Patterns"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
