# Version Tags
# See also: artifact_descriptions/version-tags.md for complete guidance

# The Version Tags artifact defines version identification standards for software artifacts, container images, git releases, and deployed services using Semantic Versioning 2.0.0 (SemVer) conventions. V

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# Version tags define naming conventions and versioning strategies for git tags, container images, artifacts, and deployed services following Semantic Versioning 2.0.0. They enable artifact identification, deployment targeting, rollback operations, and compliance audit trails across development, CI/CD...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Semantic Versioning Compliance: Strictly follow SemVer 2.0.0 - MAJOR.MINOR.PATCH with clear breaking change communication
# - Immutable Tags: Never reuse or overwrite version tags - each version is immutable forever
# - Annotated Git Tags: Use git annotated tags (git tag -a v1.2.3) with release descriptions, not lightweight tags
# - v-Prefix Convention: Prefix git tags with 'v' (v1.2.3) to distinguish from other tag types
# - Automated Tagging: Use GitVersion or semantic-release for consistent, automated version calculation

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Semantic Versioning 2.0.0 (MAJOR.MINOR.PATCH) for all version identifiers"
      - "Git annotated tags (v1.2.3) with release metadata and GPG signatures"
      - "Container image tags (myapp"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
