# Changelogs
# See also: artifact_descriptions/changelogs.md for complete guidance

# The Changelog artifact is a human-readable, chronologically-ordered record of all notable changes across software versions, documenting features, bug fixes, deprecations, security patches, and breakin

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# Changelogs provide a comprehensive, chronological record of all notable software changes across versions using Keep a Changelog format (Added, Changed, Deprecated, Removed, Fixed, Security). They document version history for upgrade planning, regression analysis, security auditing, and compliance tr...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Keep a Changelog Format: Use standardized sections (Added, Changed, Deprecated, Removed, Fixed, Security) for consistency
# - Automate from Commits: Use conventional-changelog or semantic-release to generate from Conventional Commits
# - Chronological Ordering: List versions newest-first with ISO 8601 dates (YYYY-MM-DD)
# - Unreleased Section: Maintain [Unreleased] section at top for changes between releases
# - Semantic Versioning: Follow SemVer 2.0.0 strictly - document version bumps clearly

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Keep a Changelog format with standardized sections (Added, Changed, Deprecated, Removed, Fixed, Security)"
      - "Semantic Versioning 2.0.0 (MAJOR.MINOR.PATCH) for all version entries"
      - "Chronological version ordering (newest first) with ISO 8601 release dates"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
