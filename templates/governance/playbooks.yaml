# Playbooks
# See also: artifact_descriptions/playbooks.md for complete guidance

# Incident Response Playbooks are step-by-step operational procedures that guide SRE teams and on-call engineers through diagnosing, mitigating, and resolving production incidents. These executable runb...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact provides executable, step-by-step procedures for responding to specific incident types, enabling rapid diagnosis, mitigation, and resolution. It solves the problem of inconsistent incident response by codifying expert troubleshooting knowledge into repeatable, testable playbooks that r

# BEST PRACTICES
# - Actionable Steps: Write imperative, executable steps (e.g., "Run kubectl get pods -n production" not "Check the pods")
# - Copy-Paste Ready: Include exact commands with syntax highlighting and expected output examples
# - Decision Trees: Use clear if/then logic with specific thresholds (e.g., "If CPU > 80% for 5 min, then...")
# - Automation-First: Design playbooks for automated execution first, manual as fallback
# - Validation Checkpoints: Include verification steps after each action to confirm successful execution

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Service outage playbooks (database down, API unavailable, cache failure, load ba"
      - "Performance degradation playbooks (slow queries, memory leaks, CPU spikes, netwo"
      - "Security incident playbooks (DDoS attacks, unauthorized access, data breaches, m"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
