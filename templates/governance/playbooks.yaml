# Playbooks
# See also: artifact_descriptions/playbooks.md for complete guidance

# Incident Response Playbooks are step-by-step operational procedures that guide SRE teams and on-call engineers through diagnosing, mitigating, and resolving production incidents. These executable runb

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# This artifact provides executable, step-by-step procedures for responding to specific incident types, enabling rapid diagnosis, mitigation, and resolution. It solves the problem of inconsistent incident response by codifying expert troubleshooting knowledge into repeatable, testable playbooks that r...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Actionable Steps: Write imperative, executable steps (e.g., "Run kubectl get pods -n production" not "Check the pods")
# - Copy-Paste Ready: Include exact commands with syntax highlighting and expected output examples
# - Decision Trees: Use clear if/then logic with specific thresholds (e.g., "If CPU > 80% for 5 min, then...")
# - Automation-First: Design playbooks for automated execution first, manual as fallback
# - Validation Checkpoints: Include verification steps after each action to confirm successful execution

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Service outage playbooks (database down, API unavailable, cache failure, load balancer issues)"
      - "Performance degradation playbooks (slow queries, memory leaks, CPU spikes, network latency)"
      - "Security incident playbooks (DDoS attacks, unauthorized access, data breaches, malware detection)"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
