# Remediation Tracker
# See also: artifact_descriptions/remediation-tracker.md for complete guidance

# The Remediation Tracker is a critical vulnerability and compliance gap management artifact that provides systematic tracking of security findings, audit exceptions, and control deficiencies through to...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact provides centralized tracking and management of all security findings, audit exceptions, vulnerability scan results, penetration testing findings, and compliance gaps from identification through validated closure. The tracker enables risk-based prioritization, SLA enforcement, escalati

# BEST PRACTICES
# - Document Management: - **Centralized Tracking**: Maintain single source of truth in GRC platform or ITSM tool vs. dispara
# - Remediation Workflow & Prioritization: - **CVSS-Based Prioritization**: Auto-assign remediation priority based on CVSS score (9.0-10.0: Cri
# - Integration & Automation: - **Vulnerability Scanner Integration**: Auto-create tickets from Tenable.io, Qualys VMDR, Rapid7 In
# - SLA Management & Escalation: - **Automated SLA Monitoring**: Configure daily SLA calculations with color-coded status (Green: >50
# - Evidence & Validation: - **Remediation Evidence**: Require proof of fix before closure (re-scan results showing vulnerabili

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Vulnerability scan findings from Tenable, Qualys, Rapid7, Wiz, Snyk"
      - "Penetration testing and red team findings with remediation validation"
      - "Security audit findings (SOC 2, ISO 27001, PCI-DSS QSA assessments)"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
