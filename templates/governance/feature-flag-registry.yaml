# Feature Flag Registry
# See also: artifact_descriptions/feature-flag-registry.md for complete guidance

# The Feature Flag Registry is a comprehensive inventory and governance system for managing feature flags across the software delivery lifecycle. This artifact serves as the single source of truth for a

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# This artifact serves as the authoritative registry for all feature flags, providing centralized governance, lifecycle tracking, and technical debt management for feature flag infrastructure. It enables teams to maintain visibility into flag usage, enforce cleanup policies, and prevent flag sprawl th...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Flag Naming Conventions: Establish consistent naming patterns (e.g., team-feature-date, product-experiment-variant) to enable
# - Lifecycle Management: Define clear phases (dev, staging, production) with automated promotion gates and approval workflows
# - Expiration Policies: Set expiration dates on all flags at creation; implement automated alerts 30/60/90 days before expir
# - Technical Debt Tracking: Monitor stale flags (flags at 100% rollout for >90 days); establish quarterly cleanup sprints
# - Kill Switch Readiness: Maintain designated kill switches for critical features with documented rollback procedures and owne

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Feature flag inventory across all platforms (LaunchDarkly, Split.io, Unleash, etc.)"
      - "Targeting rules, percentage rollouts, and segmentation strategies"
      - "Flag lifecycle management (creation, rollout, retirement)"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
