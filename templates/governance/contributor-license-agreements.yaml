# Contributor License Agreements
# See also: artifact_descriptions/contributor-license-agreements.md for complete guidance

# Contributor License Agreements (CLAs) are legal instruments that establish intellectual property terms for contributions to open-source projects or corporate codebases. CLAs grant organizations necess...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact documents the legal agreement between contributors and project maintainers, establishing copyright licensing terms, patent grants, and contribution warranties. It defines whether contributions use copyright assignment (transferring ownership), copyright license (granting broad rights w

# BEST PRACTICES
# - Foundation Template Adoption: Start with Apache or Linux Foundation CLA templates rather than drafting from scratch to leverage co
# - CLA vs. DCO Analysis: Evaluate DCO-only approach for permissive-licensed projects to reduce contributor friction while mai
# - Automated Enforcement: Implement GitHub CLA Assistant or EasyCLA to gate pull requests until contributors sign, preventing 
# - Clear Documentation: Provide contributor-facing documentation explaining CLA purpose, signing process, and IP implication
# - Employer Approval Guidance: Document when corporate CLA is required vs. individual CLA, including employee vs. contractor distin

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Individual Contributor License Agreements (ICLA) for individual developers contr"
      - "Corporate Contributor License Agreements (CCLA) for employees contributing on be"
      - "Developer Certificate of Origin (DCO) as lightweight alternative to traditional "
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
