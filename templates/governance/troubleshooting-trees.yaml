# Troubleshooting Trees
# See also: artifact_descriptions/troubleshooting-trees.md for complete guidance

# The Troubleshooting Trees artifact provides structured decision tree diagrams and flowcharts that guide IT operations teams, SRE engineers, and support personnel through systematic problem isolation a...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact serves as a visual decision support tool that systematically guides troubleshooting through branching logic, root cause isolation, and resolution action identification. It reduces MTTR, standardizes diagnostic procedures, enables knowledge transfer from senior to junior staff, and prov

# BEST PRACTICES
# - Start with Symptoms, Not Solutions: Begin decision trees with observable symptoms (customer impact, error messages, alerts) rather than 
# - Binary Decision Logic: Use clear yes/no questions at each decision node to minimize ambiguity and enable rapid navigation
# - Maximum 3-5 Levels Deep: Keep trees shallow to prevent cognitive overload; deeper diagnostics should branch to separate detai
# - Link to Runbooks: Each terminal node should reference specific runbooks or remediation procedures rather than embeddin
# - Include Diagnostic Commands: Provide exact CLI commands, API calls, or dashboard queries needed at each decision point

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Binary decision tree diagrams (yes/no, true/false branching)"
      - "Multi-level troubleshooting flows from symptom to root cause"
      - "Integration points to runbooks and remediation procedures"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
