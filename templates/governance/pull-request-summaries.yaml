# Pull Request Summaries
# See also: artifact_descriptions/pull-request-summaries.md for complete guidance

# The Pull Request Summaries artifact provides concise, structured documentation of code changes proposed for integration into the main codebase, following industry best practices for PR descriptions, C...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact serves as clear, contextual documentation for each code change, explaining the motivation (why), implementation approach (how), testing strategy (validation), and impact (what changes). It enables reviewers to perform effective code reviews, facilitates changelog generation for release

# BEST PRACTICES
# - Conventional Commits: Use Conventional Commits format (feat:, fix:, docs:, refactor:) for PR titles; automate changelog ge
# - Clear Title: Write concise, imperative PR titles (max 72 chars) describing the change outcome, not implementation
# - Comprehensive Description: Include WHY (motivation), WHAT (changes), HOW (approach), TESTING (validation), IMPACT (breaking cha
# - Link Issues: Always link related issues/tickets (Closes #123, Fixes #456); enables automated issue closure and tr
# - Screenshots for UI: Include before/after screenshots/GIFs for all UI changes; use tools like Loom for interactive demos

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "PR title and description following Conventional Commits (feat, fix, docs, style,"
      - "Motivation and context (problem statement, user story, business value)"
      - "Implementation approach and technical decisions"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
