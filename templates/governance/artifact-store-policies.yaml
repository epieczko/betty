# Artifact Store Policies
# See also: artifact_descriptions/artifact-store-policies.md for complete guidance

# The Artifact Store Policies defines governance for centralized storage of build outputs, dependencies, and deployable packages across the software delivery lifecycle. This policy establishes rules for...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact establishes mandatory policies for artifact storage infrastructure that supports reproducible builds, dependency management, and secure software supply chains. It defines repository types (release vs snapshot, public vs private), retention rules, caching strategies for external depende

# BEST PRACTICES
# - Repository Separation: Separate release and snapshot repositories; releases are immutable, snapshots allow overwrites for d
# - Proxy External Dependencies: Cache Maven Central, npm registry, PyPI in internal proxy repositories; reduces external dependency 
# - Checksum Verification: Validate SHA-256 checksums for all downloaded artifacts; reject artifacts with mismatched checksums 
# - Retention by Stability: Keep release artifacts indefinitely or per compliance requirements (7 years); auto-delete snapshots 
# - License Compliance Scanning: Scan all artifacts for license conflicts using FOSSA, Black Duck, or Snyk; block artifacts with non-

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Universal binary repositories (JFrog Artifactory Universal, Sonatype Nexus Repos"
      - "Package-type-specific repositories (Maven, npm, Docker, PyPI, NuGet, Helm, Go mo"
      - "Cloud-native artifact storage (AWS CodeArtifact, Google Artifact Registry, Azure"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
