# Open Source License Bom
# See also: artifact_descriptions/open-source-license-bom.md for complete guidance

# The Open Source License Bill of Materials (BOM) is a critical legal compliance artifact that catalogs all open-source software components, their licenses, and usage terms within an application or prod...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact serves as the authoritative inventory of all OSI-approved open-source licenses detected in software components, enabling legal counsel and compliance teams to assess license compatibility, identify copyleft obligations, and ensure GPL/LGPL compliance. It documents license types (permis

# BEST PRACTICES
# - Automated License Detection: Integrate FOSSA, Snyk, or Black Duck into CI/CD pipelines for continuous license scanning on every b
# - SPDX Identifier Usage: Use standardized SPDX license identifiers in package metadata and source file headers for machine re
# - Transitive Dependency Analysis: Scan full dependency trees (not just direct dependencies) as transitive dependencies inherit license
# - License Policy Enforcement: Define approved/denied license lists in tools; fail builds on GPL detection in proprietary codebases
# - Manual Review Queue: Establish legal review workflow for non-standard licenses, dual licenses, and license exceptions

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Direct and transitive dependency license identification across package managers "
      - "OSI-approved license classification"
      - "License compatibility analysis"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
