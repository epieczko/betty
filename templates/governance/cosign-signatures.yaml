# Cosign Signatures
# See also: artifact_descriptions/cosign-signatures.md for complete guidance

# The Cosign Signatures artifact documents cryptographic signatures for container images and software artifacts using Sigstore's Cosign tool, a critical component of software supply chain security. This...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact serves as the authoritative record of cryptographic signatures applied to container images, binary artifacts, and software packages using Sigstore Cosign. It documents signature metadata including public keys, OIDC identity claims, Rekor transparency log entries, and verification resul

# BEST PRACTICES
# - Keyless Signing Default: Use OIDC-based keyless signing with Fulcio for ephemeral certificates to eliminate key management bu
# - Rekor Transparency: Always publish signatures to Rekor transparency log for auditability and non-repudiation
# - SLSA Provenance: Combine Cosign signatures with SLSA provenance attestations for comprehensive build integrity
# - Multi-Arch Signing: Sign all platform-specific images individually and create signed image index for multi-arch manifest
# - Policy-as-Code: Define signature verification policies in Kyverno or OPA for automated admission control

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Cosign signature generation with keyless signing (OIDC-based Fulcio certificates"
      - "Container image signatures for Docker, OCI, and Kubernetes artifacts"
      - "Key-based signing with traditional PKI and hardware security modules (HSMs)"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
