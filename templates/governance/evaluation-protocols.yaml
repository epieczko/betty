# Evaluation Protocols
# See also: artifact_descriptions/evaluation-protocols.md for complete guidance

# The Evaluation Protocols artifact defines standardized methodologies for evaluating machine learning models, AI systems, and data products throughout their lifecycle. This artifact establishes consist...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact establishes standardized evaluation procedures for ML models and AI systems, defining performance metrics, test datasets, validation strategies, and acceptance criteria that determine model readiness for production deployment. It ensures consistent, rigorous, and fair model evaluation 

# BEST PRACTICES
# - Establish Baselines: Always compare against simple baseline models (random, most-frequent, mean prediction) before deploy
# - Multiple Metrics: Use multiple complementary metrics; single metric optimization can hide important model weaknesses
# - Stratified Evaluation: Report metrics broken down by key segments (demographics, geography, time periods) to detect bias
# - Temporal Validation: Use time-based train/test splits for time-series or sequential data to prevent data leakage
# - Calibration Checks: Verify predicted probabilities are well-calibrated using reliability diagrams and Brier scores

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Model evaluation metrics (classification, regression, ranking, NLP, computer vis"
      - "Test dataset design (holdout sets, k-fold cross-validation, temporal splits)"
      - "Offline evaluation procedures (batch evaluation on historical data)"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
