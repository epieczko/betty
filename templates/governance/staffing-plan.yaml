# Staffing Plan
# See also: artifact_descriptions/staffing-plan.md for complete guidance

# The Staffing Plan is a tactical resource management artifact that defines team composition, role assignments, onboarding schedules, and skill gap mitigation strategies for Agile teams, Scrum teams, an...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact defines the people strategy for project and program execution, specifying team structure, role requirements, hiring timelines, and skill development plans. It solves staffing gaps, ensures team stability for sustainable velocity, and aligns talent acquisition with project timelines and

# BEST PRACTICES
# - Version Control: Store in centralized version control system (Git, SharePoint with versioning, etc.) to maintain comp
# - Naming Conventions: Follow organization's document naming standards for consistency and discoverability
# - Template Usage: Use approved templates to ensure completeness and consistency across teams
# - Peer Review: Have at least one qualified peer review before submitting for approval
# - Metadata Completion: Fully complete all metadata fields to enable search, classification, and lifecycle management

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Agile team structure and composition (2-pizza teams, 5-9 members per Scrum team)"
      - "Role definitions and responsibilities (Product Owner, Scrum Master, Tech Lead, D"
      - "Staffing levels and headcount requirements by sprint and PI (Program Increment)"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
