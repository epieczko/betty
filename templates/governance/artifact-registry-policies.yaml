# Artifact Registry Policies
# See also: artifact_descriptions/artifact-registry-policies.md for complete guidance

# The Artifact Registry Policies defines governance rules for managing container images, application packages, and build artifacts across JFrog Artifactory, Sonatype Nexus, GitHub Packages, and cloud-na

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# This artifact establishes mandatory governance policies for all artifact registries used in the software delivery lifecycle. It defines retention rules, access controls, vulnerability scanning requirements, artifact promotion workflows, and naming conventions that ensure secure, traceable, and cost-...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Immutable Artifact Tags: Never overwrite existing artifact versions; use immutable tags (SHA256 digests) for production deplo
# - Retention by Recency: Keep last 10 versions per artifact OR last 90 days, whichever retains more; automatically prune olde
# - Vulnerability Scanning Gates: Block deployment of artifacts with Critical or High severity CVEs; scan all artifacts on push and da
# - Semantic Versioning: Enforce SemVer 2.0 (MAJOR.MINOR.PATCH) for all artifacts; use pre-release identifiers (1.2.3-rc.1, 1
# - Environment-Specific Repositories: Separate registries or repositories for Dev, Staging, and Production; artifacts promoted through env

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Container image registries (Docker Hub, Quay.io, ECR, GCR, ACR, Harbor, distribution/distribution)"
      - "Binary artifact repositories (JFrog Artifactory, Sonatype Nexus, Azure Artifacts)"
      - "Package management registries (npm registry, PyPI, Maven Central, NuGet Gallery, RubyGems)"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
