# Feature Store Contracts
# See also: artifact_descriptions/feature-store-contracts.md for complete guidance

# The Feature Store Contracts artifact defines the formal specifications, SLAs, and data contracts for features stored in ML feature stores like Feast, Tecton, AWS SageMaker Feature Store, Databricks Fe

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# This artifact establishes formal contracts between feature producers and consumers, defining feature schemas, SLAs, freshness guarantees, and point-in-time correctness requirements. It serves as the interface specification for feature stores, enabling teams to discover, understand, and reliably cons...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Schema-First Design: Define feature schemas explicitly with data types, constraints, and validation rules before implemen
# - Point-in-Time Guarantees: Always use point-in-time correct feature retrieval for training to prevent data leakage
# - Freshness SLAs: Document explicit freshness requirements (e.g., user features <5min, session features <1min)
# - Backward Compatibility: Evolve feature schemas with backward compatibility; version breaking changes
# - Feature Versioning: Version features to enable model reproducibility and A/B testing of feature implementations

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Feature definitions (name, description, data type, entity relationships)"
      - "Feature schemas and evolution policies (backward compatibility, versioning)"
      - "Freshness SLAs (maximum age of feature values)"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
