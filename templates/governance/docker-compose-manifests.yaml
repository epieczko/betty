# Docker Compose Manifests
# See also: artifact_descriptions/docker-compose-manifests.md for complete guidance

# The Docker Compose Manifests artifact defines multi-container application orchestration for local development, testing, and small-scale production deployments using Docker Compose. This artifact speci

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# This artifact defines Docker Compose configurations to orchestrate multi-container applications for local development, integration testing, CI/CD pipelines, and Docker Swarm production deployments, enabling developers to spin up complete application stacks (frontend, backend, databases, caches, queu...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Version Control: Store docker-compose.yml in Git with .env.example (never commit .env with secrets)
# - Compose File Version: Use Compose Specification or v3.8+ for latest features and Docker Swarm compatibility
# - Service Naming: Use descriptive service names matching architecture (frontend, api, postgres, redis, nginx)
# - Image Pinning: Always pin specific image versions (`postgres:15.3-alpine`) rather than `latest` to ensure reproduci
# - Environment Variables: Use .env files for configuration, provide .env.example as template, add .env to .gitignore

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Docker Compose file specifications (compose file v3.8, v3.9, and Compose Specification)"
      - "Service definitions (image, build context, ports, networks, volumes, environment variables)"
      - "Multi-container application orchestration (web servers, APIs, databases, caches, message brokers)"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
