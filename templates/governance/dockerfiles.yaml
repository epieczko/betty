# Dockerfiles
# See also: artifact_descriptions/dockerfiles.md for complete guidance

# The Dockerfiles artifact defines container image build specifications that transform application source code into production-ready, immutable container images optimized for security, size, and perform...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact defines Dockerfile specifications to build secure, efficient, and reproducible container images that reduce image size by 60-90% through multi-stage builds, minimize vulnerabilities through minimal base images and security scanning, and optimize build performance through intelligent la

# BEST PRACTICES
# - Version Control: Store Dockerfiles in Git alongside application source code, use semantic versioning for image tags
# - Multi-Stage Builds: Implement multi-stage builds with separate builder and production stages to reduce final image size 
# - Minimal Base Images: Use Alpine Linux (5MB), Distroless (<20MB), or scratch images instead of full Ubuntu/Debian (100MB+)
# - Base Image Pinning: Pin specific base image digests (`FROM alpine:3.18.2@sha256:...`) for reproducible builds
# - Non-Root User: Run containers as non-root user (USER 1001) to limit blast radius of container escape vulnerabilitie

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Multi-stage Dockerfile patterns (builder stage, production stage, test stage)"
      - "Base image selection (Alpine Linux 3.18+, Distroless, Ubuntu minimal, Red Hat UB"
      - "Layer optimization and caching strategies (COPY vs ADD, layer ordering, .dockeri"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
