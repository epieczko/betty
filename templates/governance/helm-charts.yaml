# Helm Charts
# See also: artifact_descriptions/helm-charts.md for complete guidance

# The Helm Charts artifact defines Kubernetes application packaging and deployment specifications using Helm, the de facto package manager for Kubernetes that enables templated, versioned, and reproduci...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact defines Helm chart specifications to package, version, and deploy Kubernetes applications in a consistent, repeatable manner across development, staging, and production environments while enabling parameterized configuration, dependency management, release rollback capabilities, and in

# BEST PRACTICES
# - Version Control: Store Helm charts in Git with semantic versioning (MAJOR.MINOR.PATCH), increment chart version on ev
# - Chart Structure: Follow standard Helm chart layout (Chart.yaml, values.yaml, templates/, charts/, crds/, README.md)
# - Semantic Versioning: Use SemVer 2.0 for chart versions, track appVersion separately for application image versions
# - values.yaml Design: Provide sensible defaults in values.yaml, document all values with comments, group related values lo
# - Template Functions: Use Helm template functions (default, required, toYaml, include) for flexible, DRY chart design

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Helm chart structure (Chart.yaml, values.yaml, templates/, charts/, crds/)"
      - "Chart metadata and versioning (apiVersion, name, version, appVersion, dependenci"
      - "Templated Kubernetes resources (Deployments, StatefulSets, DaemonSets, Jobs, Cro"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
