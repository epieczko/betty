# Messaging Frameworks
# See also: artifact_descriptions/messaging-frameworks.md for complete guidance

# Messaging Frameworks provide the strategic architecture for how an organization talks about itself, its products, and its value—ensuring consistency across all customer touchpoints from website copy t...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact creates a single source of truth for product and company messaging that cascades across all marketing, sales, and product touchpoints. It solves the "thousand flowers blooming" problem where every team crafts different messages, leading to confused prospects who can't understand what y

# BEST PRACTICES
# - Start with Customer Insights: Base messaging on win-loss interviews, customer research, and actual buyer language; avoid inside-ou
# - Positioning Before Messaging: Nail strategic positioning first (target audience, market category, unique value); messaging without
# - Hierarchy is Critical: Structure messages from company level → product level → feature level; ensure alignment so every fea
# - Proof Points Always: Every claim needs evidence—customer quote, metric, third-party validation, or comparative data; unsu
# - Test with Real Buyers: Validate messaging with target personas using Wynter, UserTesting, or customer interviews; internal 

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Message architecture and hierarchy (company > product > feature level)"
      - "Value proposition statements and elevator pitches (30-second, 2-minute, 5-minute"
      - "Positioning statements (For [target audience] who [statement of need], [product/"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
