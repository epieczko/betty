# Service Mesh Configurations
# See also: artifact_descriptions/service-mesh-configurations.md for complete guidance

# Service Mesh Configurations define the sophisticated traffic management, security, and observability policies that govern service-to-service communication within distributed microservices architecture

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# This artifact defines service mesh traffic management rules, security policies, and observability configurations that control communication between microservices. It enables platform teams to implement sophisticated networking patterns, enforce security boundaries, and instrument distributed systems...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Enable mTLS by Default: Enforce mutual TLS for all service-to-service communication with STRICT mode
# - Progressive Rollout: Use canary deployments with automated analysis before full production rollout
# - GitOps Management: Store all service mesh configurations in Git and deploy via ArgoCD/Flux with automated validation
# - Namespace Isolation: Apply service mesh policies at namespace boundaries to enforce tenant isolation
# - Least Privilege Authorization: Use AuthorizationPolicy to enforce fine-grained access control based on service identity

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Istio configurations (VirtualService, DestinationRule, Gateway, ServiceEntry, PeerAuthentication, AuthorizationPolicy)"
      - "Linkerd configurations (ServiceProfile, TrafficSplit, Server, ServerAuthorization)"
      - "Consul Connect intentions, service defaults, and service routers"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
