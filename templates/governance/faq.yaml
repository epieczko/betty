# Faq
# See also: artifact_descriptions/faq.md for complete guidance

# FAQ (Frequently Asked Questions) documentation provides curated question-and-answer content addressing the most common inquiries from users, developers, administrators, and stakeholders. Organized by ...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# FAQs provide immediate, concise answers to common questions, reducing support ticket volume, decreasing time-to-answer, and improving user satisfaction through accessible self-service content. They solve the problem of users asking the same questions repeatedly by consolidating authoritative answers

# BEST PRACTICES
# - Data-Driven FAQ Selection: Analyze support tickets to identify truly frequent questions (not assumptions), mine search analytic
# - Question-First Writing: Write questions exactly as users ask them (natural language), include variations and synonyms in met
# - Concise, Scannable Answers: Lead with direct answer in first sentence, keep answers to 50-300 words when possible, use bullet po
# - SEO Optimization: Implement Schema.org FAQPage markup for rich snippets, optimize for featured snippets (concise answe
# - Smart Organization: Group by user need or journey stage (not internal organization), surface most asked questions at top

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "General questions about product features, capabilities, and limitations"
      - "Account and billing questions (pricing, subscriptions, payments, refunds)"
      - "Technical questions (compatibility, requirements, performance)"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
