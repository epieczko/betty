# Chaos Engineering Experiments
# See also: artifact_descriptions/chaos-engineering-experiments.md for complete guidance

# Chaos Engineering Experiments are controlled, hypothesis-driven tests that inject failures into production or production-like systems to discover weaknesses before they manifest as outages. These expe

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# This artifact documents planned chaos engineering experiments including hypothesis, failure injection methodology, blast radius controls, monitoring approach, rollback procedures, and success criteria to systematically validate system resilience and discover failure modes before they impact producti...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Start Small: Begin with smallest possible blast radius (single instance, 1% traffic, test environment)
# - Hypothesis First: Always define clear hypothesis and success criteria before running experiments
# - Monitor Everything: Ensure comprehensive monitoring (metrics, logs, traces) before injecting failures
# - Automated Rollback: Implement automatic abort triggers based on SLO breaches or error rate thresholds
# - Business Hours Only: Run initial experiments during business hours with full team availability

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Experiment design and hypothesis formulation (steady-state definition, predicted outcomes)"
      - "Failure injection scenarios (pod kills, network failures, resource exhaustion, dependency failures)"
      - "Chaos engineering platform configurations (Chaos Monkey, Gremlin, Litmus Chaos, Chaos Mesh)"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
