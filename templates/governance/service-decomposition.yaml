# Service Decomposition
# See also: artifact_descriptions/service-decomposition.md for complete guidance

# The Service Decomposition Strategy is an architectural blueprint that defines how monolithic applications or complex systems are decomposed into microservices, documenting bounded contexts, service bo...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This strategy defines the systematic approach for decomposing monolithic or complex systems into microservices, establishing service boundaries based on domain analysis, business capabilities, and architectural principles. It solves the challenge of determining "where to cut" by applying Domain-Driv

# BEST PRACTICES
# - Start with Domain Analysis: Conduct Event Storming or Domain Storytelling workshops with domain experts before technical decompo
# - Bounded Context First: Identify bounded contexts based on domain language and business capabilities, not technical concerns
# - Transaction Boundaries: Keep aggregates that must be transactionally consistent within same service
# - Database per Service: Enforce data ownership - each service owns its data, no direct database sharing
# - Strangler Fig Migration: Incrementally extract services from monolith rather than big-bang rewrite

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Domain-Driven Design (DDD) application"
      - "Bounded context identification through event storming, domain analysis, and busi"
      - "Context mapping patterns"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
