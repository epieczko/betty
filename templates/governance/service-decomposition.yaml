# Service Decomposition
# See also: artifact_descriptions/service-decomposition.md for complete guidance

# The Service Decomposition Strategy is an architectural blueprint that defines how monolithic applications or complex systems are decomposed into microservices, documenting bounded contexts, service bo

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# This strategy defines the systematic approach for decomposing monolithic or complex systems into microservices, establishing service boundaries based on domain analysis, business capabilities, and architectural principles. It solves the challenge of determining "where to cut" by applying Domain-Driv...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Start with Domain Analysis: Conduct Event Storming or Domain Storytelling workshops with domain experts before technical decompo
# - Bounded Context First: Identify bounded contexts based on domain language and business capabilities, not technical concerns
# - Transaction Boundaries: Keep aggregates that must be transactionally consistent within same service
# - Database per Service: Enforce data ownership - each service owns its data, no direct database sharing
# - Strangler Fig Migration: Incrementally extract services from monolith rather than big-bang rewrite

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Domain-Driven Design (DDD) application"
      - "Bounded context identification through event storming, domain analysis, and business capability mapping"
      - "Context mapping patterns"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
