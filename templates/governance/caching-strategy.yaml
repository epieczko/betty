# Caching Strategy
# See also: artifact_descriptions/caching-strategy.md for complete guidance

# The Caching Strategy artifact defines comprehensive multi-tier caching architecture for distributed systems, specifying cache technologies, invalidation patterns, TTL policies, and performance optimiz

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# This artifact defines the comprehensive caching strategy to reduce application latency from seconds to milliseconds, decrease database load by 70-95%, minimize network bandwidth consumption, and improve application scalability through intelligent multi-tier caching that balances performance optimiza...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Version Control: Store in centralized version control system (Git, SharePoint with versioning, etc.) to maintain comp
# - Multi-Tier Caching Architecture: Implement layered caching strategy (browser cache → CDN → application cache → database cache) to max
# - Cache Key Design: Use hierarchical, versioned cache keys with namespaces (e.g., `user:{userId}:profile:v2`, `product:{
# - TTL Strategy: Set appropriate TTLs based on data volatility (static content: 1 year, user sessions: 30 min, real-t
# - Cache Invalidation: Implement event-driven cache invalidation using message queues (Kafka, SQS, Redis Pub/Sub) rather th

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Multi-tier caching architecture (browser cache, CDN edge cache, application cache, database query cache)"
      - "In-memory cache technologies (Redis 7.x, Redis Cluster, Redis Sentinel, Memcached, Hazelcast, Apache Ignite)"
      - "HTTP caching (Varnish Cache, NGINX proxy cache, Squid, browser caching directives)"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
