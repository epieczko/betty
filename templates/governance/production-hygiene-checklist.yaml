# Production Hygiene Checklist
# See also: artifact_descriptions/production-hygiene-checklist.md for complete guidance

# The Production Hygiene Checklist is a comprehensive pre-deployment validation artifact that ensures production environments maintain operational excellence, security posture, monitoring coverage, runb...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# The production hygiene checklist validates operational readiness, infrastructure health, monitoring coverage, runbook completeness, security posture, and incident response preparedness before deployments and during regular operational reviews. It prevents production issues through proactive validati

# BEST PRACTICES
# - Regular Hygiene Reviews: Conduct production hygiene checks weekly or biweekly, not just before major releases
# - Automated Validation: Automate checklist validation where possible (monitoring coverage, backup success, certificate expir
# - SLI/SLO Tracking: Define and track service level indicators/objectives for all critical services
# - Monitoring Coverage Gaps: Identify and remediate monitoring blind spots before they cause incidents
# - Alert Tuning: Continuously tune alerts to reduce noise and prevent alert fatigue

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Monitoring and alerting validation (Prometheus, Grafana, Datadog, New Relic dash"
      - "SLI/SLO/SLA tracking (service level indicators, objectives, error budgets, avail"
      - "Logging and log aggregation (ELK Stack, Splunk, CloudWatch Logs, structured logg"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
