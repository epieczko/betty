# Provenance Attestations
# See also: artifact_descriptions/provenance-attestations.md for complete guidance

# The Provenance Attestations artifact provides cryptographically-signed build provenance records using SLSA (Supply-chain Levels for Software Artifacts), in-toto, and Sigstore frameworks to establish t...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact serves as the implementation guide for generating, signing, and verifying cryptographic provenance attestations using SLSA, in-toto, and Sigstore. It documents how to instrument CI/CD pipelines to automatically generate SLSA provenance, sign artifacts with Sigstore (Cosign), and verify

# BEST PRACTICES
# - SLSA Level 2 Minimum: Achieve SLSA Level 2 (hosted build, signed provenance) as baseline for all production artifacts
# - Keyless Signing: Use Sigstore Fulcio keyless signing to avoid long-lived private key management burden
# - Automated Provenance: Generate SLSA provenance automatically in CI/CD; never manually create provenance
# - Builder Identity: Use OIDC identity from GitHub Actions, GitLab CI as signer identity (no service accounts with keys)
# - Transparency Logging: Record all signatures in Rekor transparency log for public accountability

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "SLSA (Supply-chain Levels for Software Artifacts) provenance generation for buil"
      - "in-toto attestations documenting build steps and artifact transformations"
      - "Sigstore signing (Cosign for container images, Rekor transparency log, Fulcio ke"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
