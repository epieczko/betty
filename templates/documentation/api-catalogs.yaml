# Api Catalogs
# See also: artifact_descriptions/api-catalogs.md for complete guidance

# The API Catalog is a comprehensive inventory and documentation system that centralizes all organizational APIs, providing a single source of truth for API discovery, governance, and lifecycle manageme...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact serves as the authoritative registry of all organizational APIs, providing comprehensive metadata, specifications, and lifecycle information to enable API discovery, governance, and consumption. It solves the API sprawl problem by centralizing documentation, supports architectural deci

# BEST PRACTICES
# - API-First Strategy: Register APIs during design phase before implementation, enabling contract-first development
# - Complete Specifications: Provide full OpenAPI/AsyncAPI/GraphQL schemas with examples, descriptions, and error responses
# - Automated Synchronization: Integrate catalog with CI/CD pipelines to auto-update from source repositories and API gateways
# - Semantic Versioning: Use SemVer (MAJOR.MINOR.PATCH) consistently across all APIs for predictable evolution
# - Deprecation Lifecycle: Define clear deprecation timelines (typically 6-12 months) with sunset dates and migration paths

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Complete inventory of REST, GraphQL, gRPC, SOAP, and event-driven APIs (Kafka, R"
      - "OpenAPI 3.1, AsyncAPI 2.x, GraphQL Schema, Protobuf, and WSDL specifications"
      - "API metadata"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
