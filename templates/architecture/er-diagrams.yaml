# Er Diagrams
# See also: artifact_descriptions/er-diagrams.md for complete guidance

# Entity-Relationship Diagrams are fundamental visual artifacts for data modeling, depicting entities, their attributes, and the relationships between them. These diagrams provide a standardized, graphi

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# This artifact provides visual representation of entity-relationship models using standardized notation systems. It depicts entities, attributes, primary/foreign keys, relationships, cardinality, and constraints in a format that enables database design, communication with stakeholders, normalization ...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Notation Consistency: - **Single Notation**: Use one consistent notation throughout (Crow's Foot recommended for clarity)
# - Entity Design: - **Meaningful Names**: Use clear, business-meaningful entity names (Customer, not CUST_TBL)
# - Relationship Modeling: - **Resolve Many-to-Many**: Always resolve M:N relationships with associative entities
# - Attribute Management: - **Atomic Attributes**: Ensure all attributes are atomic (1NF); break composite attributes into com
# - Normalization: - **Start Normalized**: Begin with fully normalized model (3NF/BCNF)

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Entities (strong, weak, associative)"
      - "Attributes (simple, composite, multivalued, derived)"
      - "Primary keys, candidate keys, foreign keys"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
