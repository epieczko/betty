# Team Topology Map
# See also: artifact_descriptions/team-topology-map.md for complete guidance

# The Team Topology Map is a strategic organizational design artifact that visualizes team structures, boundaries, and interaction modes based on Team Topologies principles. This living document maps th...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact visualizes organizational team structure using Team Topologies principles to enable fast flow, reduce cognitive load, and optimize for autonomous delivery. It maps the four fundamental team types, their boundaries, dependencies, and interaction modes to support deliberate organizationa

# BEST PRACTICES
# - Team Topology Design Principles: - **Cognitive Load Limits**: Ensure each team owns a manageable domain (typically 1-3 bounded contex
# - Organizational Design Best Practices: - **Inverse Conway Maneuver**: Design team structure to produce desired software architecture
# - Interaction Mode Guidance: - **Collaboration Mode**: Use temporarily for discovering boundaries or building new capabilities (t
# - Visualization and Communication: - **Visual-First Approach**: Use Miro, Mural, or LucidChart for collaborative mapping sessions
# - Version Control: Store in centralized version control system (Git, SharePoint with versioning, etc.) to maintain comp

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Four fundamental team types"
      - "Three team interaction modes"
      - "Team APIs and boundaries defining what each team owns and provides"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
