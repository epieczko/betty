# Architecture Waivers
# See also: artifact_descriptions/architecture-waivers.md for complete guidance

# The Architecture Waivers artifact documents formal exception requests when projects or systems cannot comply with established architectural standards, patterns, or technology choices. This risk manage...

metadata:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  lastModified: "YYYY-MM-DD"
  status: "Draft"
  author: "Author Name"
  documentOwner: "Owner Name/Role"
  classification: "Internal"

  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      date: null

# PURPOSE
# This artifact provides transparent mechanism for managing architectural exceptions when strict compliance is not feasible due to business constraints, technical limitations, legacy system constraints, or time-to-market pressures. It enables informed risk acceptance while maintaining architectural go

# BEST PRACTICES
# - Exhaustive Alternatives Analysis: Require documentation of all alternatives considered before granting waiver; demonstrate due diligen
# - Quantitative Risk Assessment: Use FAIR methodology to quantify risk in monetary terms (annual loss expectancy); avoid purely quali
# - Specific Compensating Controls: Define measurable, verifiable compensating controls with clear implementation criteria; avoid vague 
# - Risk Acceptance Authority: Match approval authority to risk level - ARB for low/medium, CTO/CIO for high, Board for critical; n
# - Mandatory Sunset Dates: Require expiration date on all waivers (no permanent exceptions); maximum 12 months for first approv

# Main content - customize based on artifact type
content:
  summary: |
    Provide overview and context for this artifact.
  
  scope:
    included:
      - "Exception requests"
      - "Business justification"
      - "Risk assessment"
    
    excluded:
      - "Items explicitly out of scope"
  
# Related artifacts
relatedArtifacts:
  - type: "Related Artifact Type"
    path: "path/to/artifact"
    relationship: "depends-on | references | implements"

# Change history
changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
