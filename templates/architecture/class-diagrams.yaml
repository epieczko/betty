# Class Diagrams
# See also: artifact_descriptions/class-diagrams.md for complete guidance

# Class Diagrams are fundamental UML (Unified Modeling Language) diagrams that represent the static structure of object-oriented systems through classes, attributes, methods, and relationships. These di

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# This artifact serves as the authoritative visual representation of a system's static structure, defining classes, their attributes, operations, and relationships including inheritance, associations, aggregations, and compositions. It enables object-oriented analysis, design validation, and serves as...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Appropriate Granularity: Include enough detail for implementation but avoid cluttering diagram with every getter/setter; focu
# - Clear Naming: Use domain-driven design naming that reflects business concepts; avoid technical jargon in domain mo
# - Package Organization: Group related classes into packages/namespaces; show package dependencies in separate package diagra
# - Relationship Clarity: Use correct UML relationship types (composition vs aggregation vs association); annotate multiplicit
# - Design Patterns: Explicitly identify and label design pattern usage (Factory, Strategy, etc.) to communicate design i

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Class definitions with attributes, operations, and visibility modifiers"
      - "Relationships"
      - "Multiplicity and cardinality specifications for associations"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
