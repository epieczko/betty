# Functional Requirements Specification
# See also: artifact_descriptions/functional-requirements-specification.md for complete guidance

# The Functional Requirements Specification (FRS) is the authoritative document that defines what a system must do from a functional perspective, serving as the contractual foundation between business s

metadata:
  # Document Control
  version: "1.0.0"  # Semantic versioning (MAJOR.MINOR.PATCH)
  created: "YYYY-MM-DD"  # Date this artifact was created
  lastModified: "YYYY-MM-DD"  # Date of most recent update
  status: "Draft"  # Draft | Review | Approved | Published | Deprecated

  # Ownership & Accountability
  author: "Author Name"  # Primary author of this artifact
  documentOwner: "Owner Role/Name"  # Person/role responsible for maintenance
  classification: "Internal"  # Public | Internal | Confidential | Restricted

  # Approvals
  approvers:
    - name: "Approver Name"
      role: "Approver Role"
      approvalDate: null  # Date of approval (YYYY-MM-DD)

# PURPOSE
# This artifact serves as the definitive specification of functional requirements, detailing what the system must do to meet business objectives. It documents user interactions, business processes, data transformations, system behaviors, validation rules, and acceptance criteria in sufficient detail t...

# MAIN CONTENT
# Complete the sections below based on your specific artifact needs

# BEST PRACTICES:
# - Requirements Elicitation: Conduct structured elicitation workshops with stakeholders; use techniques like interviews, observat
# - Unique Identifiers: Assign unique IDs to each functional requirement (e.g., FR-001) for traceability through RTM
# - Atomic Requirements: Write single, testable requirements; avoid compound statements that contain multiple requirements
# - User Story Format: Use "As a [role], I want [capability], so that [benefit]" format for user-centric requirements
# - Acceptance Criteria: Define clear, measurable acceptance criteria using Given-When-Then (Gherkin) format for each require

content:
  overview: |
    # Provide a high-level overview of this artifact
    # What is this document about?
    # Why does it exist?
    
  scope:
    inScope:
      - "Detailed functional requirements with unique identifiers and traceability"
      - "User roles, personas, and permission models"
      - "Business rules, validation logic, and decision tables"
      # Add additional in-scope items
    outOfScope:
      - "Item explicitly out of scope"
      # Add additional out-of-scope items

  details: |
    # Provide detailed information specific to this artifact type
    # Include all necessary technical details
    # Reference the artifact description for required sections
    
# QUALITY CHECKLIST
# Before finalizing, verify:
# ✓ Completeness: All required sections present and adequately detailed
# ✓ Accuracy: Information verified and validated by appropriate subject matter experts
# ✓ Clarity: Written in clear, unambiguous language appropriate for intended audience
# ✓ Consistency: Aligns with organizational standards, templates, and related artifacts
# ✓ Currency: Based on current information; outdated content removed or updated

relatedDocuments:
  - type: "Related Artifact Type"
    path: "path/to/related/artifact"
    relationship: "depends-on | references | supersedes | implements"

changeHistory:
  - version: "1.0.0"
    date: "YYYY-MM-DD"
    author: "Author Name"
    changes: "Initial version"
